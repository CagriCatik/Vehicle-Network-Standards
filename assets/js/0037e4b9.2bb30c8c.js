"use strict";(self.webpackChunkvns=self.webpackChunkvns||[]).push([[15629],{5423:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>d,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"SOME-IP/someip/services","title":"Typen von Services","description":"3.2 Typen von Services in SOME/IP","source":"@site/docs/SOME-IP/03_someip/02_services.md","sourceDirName":"SOME-IP/03_someip","slug":"/SOME-IP/someip/services","permalink":"/Vehicle-Network-Standards/docs/SOME-IP/someip/services","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/SOME-IP/03_someip/02_services.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"someipSidebar","previous":{"title":"Scalable Service-Oriented Middleware over IP","permalink":"/Vehicle-Network-Standards/docs/SOME-IP/someip/someip"},"next":{"title":"Request/Response - Methodenaufruf","permalink":"/Vehicle-Network-Standards/docs/SOME-IP/someip/request-response"}}');var s=r(74848),t=r(28453);const d={},l="Typen von Services",a={},c=[{value:"3.2 <strong>Typen von Services in SOME/IP</strong>",id:"32-typen-von-services-in-someip",level:2},{value:"3.2.1 <strong>\xdcbersicht \xfcber die Diensttypen in SOME/IP</strong>",id:"321-\xfcbersicht-\xfcber-die-diensttypen-in-someip",level:3},{value:"3.2.2 <strong>Methodenbasierte Dienste</strong>",id:"322-methodenbasierte-dienste",level:3},{value:"3.2.3 <strong>Event-basierte Dienste</strong>",id:"323-event-basierte-dienste",level:3},{value:"3.2.4 <strong>Field-basierte Dienste</strong>",id:"324-field-basierte-dienste",level:3},{value:"3.2.5 <strong>Broadcast- und Multicast-Dienste</strong>",id:"325-broadcast--und-multicast-dienste",level:3},{value:"3.2.6 <strong>Remote Procedure Call (RPC) Dienste</strong>",id:"326-remote-procedure-call-rpc-dienste",level:3},{value:"3.2.7 <strong>Zusammenfassung</strong>",id:"327-zusammenfassung",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"typen-von-services",children:"Typen von Services"})}),"\n",(0,s.jsxs)(n.h2,{id:"32-typen-von-services-in-someip",children:["3.2 ",(0,s.jsx)(n.strong,{children:"Typen von Services in SOME/IP"})]}),"\n",(0,s.jsx)(n.p,{children:"SOME/IP (Scalable service-Oriented Middleware over IP) erm\xf6glicht die Implementierung und Verwaltung verschiedener Arten von Diensten, die in einem Fahrzeugnetzwerk eingesetzt werden k\xf6nnen. Diese Dienste k\xf6nnen je nach Funktion und Anwendungsfall variieren und decken ein breites Spektrum von Fahrzeugfunktionen ab, von sicherheitskritischen Steuerungen bis hin zu Komfort- und Infotainment-Diensten. In diesem Abschnitt werden die verschiedenen Typen von Services, die mit SOME/IP implementiert werden k\xf6nnen, beschrieben und mit realen Beispielen aus der Automobilindustrie illustriert."}),"\n",(0,s.jsxs)(n.h3,{id:"321-\xfcbersicht-\xfcber-die-diensttypen-in-someip",children:["3.2.1 ",(0,s.jsx)(n.strong,{children:"\xdcbersicht \xfcber die Diensttypen in SOME/IP"})]}),"\n",(0,s.jsx)(n.p,{children:"In einem SOME/IP-basierten Fahrzeugnetzwerk werden verschiedene Arten von Diensten bereitgestellt, die sich in ihrer Funktion, ihrem Datenvolumen und ihren Echtzeitanforderungen unterscheiden. Diese Dienste lassen sich in mehrere Hauptkategorien einteilen:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Methodenbasierte Dienste"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Event-basierte Dienste"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Field-basierte Dienste"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Broadcast- und Multicast-Dienste"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Remote Procedure Call (RPC) Dienste"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Jede dieser Diensttypen erf\xfcllt spezifische Anforderungen und wird in verschiedenen Anwendungsf\xe4llen innerhalb eines Fahrzeugs eingesetzt."}),"\n",(0,s.jsxs)(n.h3,{id:"322-methodenbasierte-dienste",children:["3.2.2 ",(0,s.jsx)(n.strong,{children:"Methodenbasierte Dienste"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Beschreibung:"}),"\nMethodenbasierte Dienste sind die am h\xe4ufigsten verwendete Art von Diensten in SOME/IP. Sie erm\xf6glichen es einem Client, eine bestimmte Methode auf einem Server aufzurufen, wobei Parameter an den Server gesendet und ein Ergebnis zur\xfcckgegeben wird. Diese Dienste sind vergleichbar mit Remote Procedure Calls (RPC), bei denen eine Funktion aus der Ferne aufgerufen wird."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Funktionsweise:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ein Client sendet eine Anforderung (Request) an den Server, die den Namen der Methode und die Parameter enth\xe4lt."}),"\n",(0,s.jsx)(n.li,{children:"Der Server empf\xe4ngt die Anforderung, f\xfchrt die Methode aus und sendet das Ergebnis (Response) zur\xfcck an den Client."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Beispiel: Motorsteuerung"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Anwendung:"})," Die Steuerung der Motordrehzahl kann als methodenbasierter Dienst implementiert werden. Ein Steuerger\xe4t (Client) sendet eine Anforderung zur Anpassung der Motordrehzahl an das Motorsteuerger\xe4t (Server)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Prozess:"})," Der Client fordert eine \xc4nderung der Drehzahl an, der Server verarbeitet die Anforderung und gibt die neue Drehzahl als Antwort zur\xfcck."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Diagramm: Methodenbasierter Dienst"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-plaintext",children:"+-------------------------------------------------------------+\n|                   Methodenbasierter Dienst                  |\n| +---------------------------------------------------------+ |\n| |  Client (z.B. Tempomat)                                 | |\n| |  - Sendet Anfrage: Setze Motordrehzahl                  | |\n| |                                                         | |\n| |  Server (z.B. Motorsteuerger\xe4t)                         | |\n| |  - Empf\xe4ngt Anfrage                                     | |\n| |  - F\xfchrt Methode aus: Motordrehzahl anpassen            | |\n| |  - Sendet Antwort: Neue Drehzahl                        | |\n+-------------------------------------------------------------+\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"323-event-basierte-dienste",children:["3.2.3 ",(0,s.jsx)(n.strong,{children:"Event-basierte Dienste"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Beschreibung:"}),"\nEvent-basierte Dienste erm\xf6glichen die \xdcberwachung und Benachrichtigung \xfcber \xc4nderungen oder bestimmte Ereignisse. Ein Server sendet eine Nachricht an alle Clients, die sich f\xfcr bestimmte Ereignisse registriert haben, wenn diese Ereignisse eintreten. Diese Dienste sind besonders n\xfctzlich f\xfcr Zustands\xfcberwachungen und Benachrichtigungen."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Funktionsweise:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Der Server \xfcberwacht bestimmte Bedingungen oder Zust\xe4nde."}),"\n",(0,s.jsx)(n.li,{children:"Wenn ein vordefiniertes Ereignis eintritt (z. B. eine \xc4nderung eines Zustands), sendet der Server eine Benachrichtigung an alle registrierten Clients."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Beispiel: Reifendruck\xfcberwachungssystem (TPMS)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Anwendung:"})," Ein Reifendrucksensor (Server) kann einen event-basierten Dienst implementieren, der Clients (z. B. das zentrale Steuerger\xe4t) benachrichtigt, wenn der Reifendruck unter einen bestimmten Schwellenwert f\xe4llt."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Prozess:"})," Der Sensor \xfcberwacht kontinuierlich den Reifendruck. Wenn der Druck abf\xe4llt, sendet der Server ein Ereignis, das die Clients \xfcber das Problem informiert."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Diagramm: Event-basierter Dienst"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-plaintext",children:"+-------------------------------------------------------------+\n|                    Event-basierter Dienst                   |\n| +---------------------------------------------------------+ |\n| |  Server (z.B. Reifendrucksensor)                        | |\n| |  - \xdcberwacht Reifendruck                                | |\n| |  - Bei Druckabfall: Sende Ereignis                      | |\n| +---------------------------------------------------------+ |\n|               |                              |               |\n|               v                              v               |\n| +---------------------------------------------------------+ |\n| |  Client 1 (z.B. Steuerger\xe4t)    |  Client 2 (z.B. Display) | |\n| |  - Empf\xe4ngt Ereignis: Niedriger Reifendruck               | |\n+-------------------------------------------------------------+\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"324-field-basierte-dienste",children:["3.2.4 ",(0,s.jsx)(n.strong,{children:"Field-basierte Dienste"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Beschreibung:"}),"\nField-basierte Dienste erm\xf6glichen den Zugriff auf einzelne Datenfelder oder Attribute eines Dienstes. Diese Dienste sind n\xfctzlich, um spezifische Werte abzurufen oder zu setzen, ohne eine vollst\xe4ndige Methode ausf\xfchren zu m\xfcssen."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Funktionsweise:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Der Client kann ein spezifisches Feld auf dem Server abfragen oder \xe4ndern."}),"\n",(0,s.jsx)(n.li,{children:"Der Server stellt den aktuellen Wert des Feldes bereit oder aktualisiert das Feld entsprechend der Anfrage des Clients."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Beispiel: Fahrzeuglichtsteuerung"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Anwendung:"})," Die Helligkeit der Fahrzeugbeleuchtung kann als Feld innerhalb eines steuerbaren Dienstes implementiert werden. Ein Steuerger\xe4t (Client) kann den aktuellen Helligkeitswert abfragen oder anpassen."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Prozess:"})," Der Client fordert den aktuellen Helligkeitswert an, oder setzt einen neuen Wert f\xfcr die Fahrzeugbeleuchtung."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Diagramm: Field-basierter Dienst"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-plaintext",children:"+-------------------------------------------------------------+\n|                     Field-basierter Dienst                  |\n| +---------------------------------------------------------+ |\n| |  Client (z.B. Lichtsteuerger\xe4t)                         | |\n| |  - Fragt aktuellen Helligkeitswert ab                   | |\n| |  - Setzt neuen Helligkeitswert                          | |\n| |                                                         | |\n| |  Server (z.B. Fahrzeugbeleuchtung)                      | |\n| |  - Liefert aktuellen Wert zur\xfcck                        | |\n| |  - Aktualisiert Helligkeit entsprechend der Anforderung | |\n+-------------------------------------------------------------+\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"325-broadcast--und-multicast-dienste",children:["3.2.5 ",(0,s.jsx)(n.strong,{children:"Broadcast- und Multicast-Dienste"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Beschreibung:"}),"\nBroadcast- und Multicast-Dienste erm\xf6glichen die \xdcbertragung von Nachrichten an mehrere Empf\xe4nger gleichzeitig. W\xe4hrend Broadcast-Nachrichten an alle Ger\xe4te im Netzwerk gesendet werden, werden Multicast-Nachrichten nur an eine ausgew\xe4hlte Gruppe von Empf\xe4ngern gesendet, die sich f\xfcr den jeweiligen Multicast-Kanal registriert haben."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Funktionsweise:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Der Server sendet eine Nachricht, die von allen registrierten Clients empfangen wird (Multicast) oder von allen Ger\xe4ten im Netzwerk (Broadcast)."}),"\n",(0,s.jsx)(n.li,{children:"Dies ist besonders n\xfctzlich f\xfcr Anwendungen, bei denen Informationen gleichzeitig an mehrere Ger\xe4te gesendet werden m\xfcssen, wie z. B. Sensordaten oder Statusmeldungen."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Beispiel: Verteilung von Sensordaten"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Anwendung:"})," Ein Fahrzeugsensor (z. B. LIDAR) sendet regelm\xe4\xdfig Sensordaten an mehrere Steuerger\xe4te im Fahrzeug, die diese Daten f\xfcr unterschiedliche Funktionen (z. B. Navigation, ADAS) nutzen."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Prozess:"})," Der Sensor sendet die Daten per Multicast an alle registrierten Steuerger\xe4te, die diese Daten ben\xf6tigen."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Diagramm: Multicast-Dienst"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-plaintext",children:"+-------------------------------------------------------------+\n|                     Multicast-Dienst                        |\n| +---------------------------------------------------------+ |\n| |  Server (z.B. LIDAR-Sensor)                             | |\n| |  - Sendet Sensordaten an Multicast-Gruppe               | |\n| +---------------------------------------------------------+ |\n|               |                              |               |\n|               v                              v               |\n| +---------------------------------------------------------+ |\n| |  Steuerger\xe4t 1 (z.B. ADAS)      |  Steuerger\xe4t 2 (z.B. Navigation) | |\n| |  - Empf\xe4ngt Sensordaten                               | |\n+-------------------------------------------------------------+\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"326-remote-procedure-call-rpc-dienste",children:["3.2.6 ",(0,s.jsx)(n.strong,{children:"Remote Procedure Call (RPC) Dienste"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Beschreibung:"}),"\nRPC-Dienste erm\xf6glichen es einem Client, eine Methode auf einem Server auszuf\xfchren, als ob diese Methode lokal auf dem Client ausgef\xfchrt w\xfcrde. Diese Dienste sind besonders n\xfctzlich f\xfcr die Implementierung von entfernten Steuerungen und anderen Funktionen, die eine enge Integration zwischen verteilten Systemen erfordern."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Funktionsweise:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Der Client sendet einen Aufruf an den Server, der die Methode ausf\xfchrt und das Ergebnis zur\xfccksendet. Dies kann in Echtzeit oder asynchron geschehen, je nach den Anforderungen der Anwendung."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Beispiel: Fernsteuerung von Fahrzeugfunktionen"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Anwendung:"})," Ein Smartphone-App (Client) k\xf6nnte verwendet werden, um das Fahrzeug aus der Ferne zu starten oder T\xfcren zu entriegeln. Die App sendet einen RPC-Aufruf an das Fahrzeug, das den entsprechenden Befehl ausf\xfchrt."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Prozess:"})," Der Client fordert das Fahrzeug auf, die T\xfcren zu entriegeln, der Server im Fahrzeug f\xfchrt den Befehl aus und sendet eine Best\xe4tigung zur\xfcck."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Diagramm: RPC-Dienst"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-plaintext",children:"+-------------------------------------------------------------+\n|                        RPC-Dienst                           |\n| +---------------------------------------------------------+ |\n| |  Client (z.B. Smartphone-App)                            | |\n| |  - Sendet RPC-Aufruf: T\xfcren entriegeln                   | |\n| |                                                         | |\n| |  Server (z.B. Fahrzeugsteuerger\xe4t)\n\n                      | |\n| |  - F\xfchrt RPC-Methode aus: Entriegle T\xfcren               | |\n| |  - Sendet Best\xe4tigung zur\xfcck                            | |\n+-------------------------------------------------------------+\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"327-zusammenfassung",children:["3.2.7 ",(0,s.jsx)(n.strong,{children:"Zusammenfassung"})]}),"\n",(0,s.jsx)(n.p,{children:"SOME/IP bietet eine vielseitige und skalierbare Plattform zur Implementierung verschiedener Arten von Diensten in modernen Fahrzeugnetzwerken. Die Diensttypen reichen von methodenbasierten Diensten, die entfernte Aufrufe von Fahrzeugfunktionen erm\xf6glichen, \xfcber event-basierte Dienste, die Zustands\xfcberwachungen und Benachrichtigungen unterst\xfctzen, bis hin zu komplexeren RPC-Diensten, die eine enge Integration zwischen verteilten Systemen erm\xf6glichen. Die Flexibilit\xe4t und Erweiterbarkeit von SOME/IP machen es zu einer idealen Middleware-L\xf6sung f\xfcr die Entwicklung vernetzter und autonomer Fahrzeuge, die eine Vielzahl von Diensten unterst\xfctzen m\xfcssen."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:"Dieses Kapitel bietet einen umfassenden \xdcberblick \xfcber die verschiedenen Typen von Diensten, die mit SOME/IP implementiert werden k\xf6nnen, und illustriert deren Anwendung in realen Fahrzeugkontexten. Ingenieure und technische Fachkr\xe4fte erhalten hiermit wertvolle Einblicke in die Gestaltung und Implementierung serviceorientierter Architekturen in der Automobilindustrie."})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>l});var i=r(96540);const s={},t=i.createContext(s);function d(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);