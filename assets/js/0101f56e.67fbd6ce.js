"use strict";(self.webpackChunkvns=self.webpackChunkvns||[]).push([[34243],{50901:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"SOVA/getting_started","title":"SOVA","description":"---","source":"@site/docs/SOVA/00_getting_started.md","sourceDirName":"SOVA","slug":"/SOVA/getting_started","permalink":"/Vehicle-Network-Standards/docs/SOVA/getting_started","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/SOVA/00_getting_started.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{},"sidebar":"sovaSidebar","next":{"title":"Grundlagen","permalink":"/Vehicle-Network-Standards/docs/category/grundlagen-1"}}');var t=r(74848),s=r(28453);const l={},c="SOVA",d={},o=[{value:"1. <strong>Fundamentals and Context</strong>",id:"1-fundamentals-and-context",level:2},{value:"2. <strong>Architecture-Specific Implementations</strong>",id:"2-architecture-specific-implementations",level:2},{value:"3. <strong>Core Concepts of Service-Oriented Architectures</strong>",id:"3-core-concepts-of-service-oriented-architectures",level:2},{value:"4. <strong>Technical Frameworks and Protocols</strong>",id:"4-technical-frameworks-and-protocols",level:2},{value:"5. <strong>Design Patterns for Vehicle Communication</strong>",id:"5-design-patterns-for-vehicle-communication",level:2},{value:"6. <strong>State Management and Resource Control</strong>",id:"6-state-management-and-resource-control",level:2},{value:"7. <strong>Access Control and Coordination Patterns</strong>",id:"7-access-control-and-coordination-patterns",level:2}];function a(e){const n={h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"sova",children:"SOVA"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"1-fundamentals-and-context",children:["1. ",(0,t.jsx)(n.strong,{children:"Fundamentals and Context"})]}),"\n",(0,t.jsx)(n.p,{children:"Dieser Abschnitt bietet eine Einf\xfchrung in die Grundlagen und den Kontext der serviceorientierten Fahrzeugarchitektur."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Wichtige Inhalte:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Evolution of Mobility: Towards Software-Driven Vehicles"}),"\n",(0,t.jsx)(n.li,{children:"Fundamentals of Service-Oriented Vehicle Architecture"}),"\n",(0,t.jsx)(n.li,{children:"Transition to a New World: Automotive E/E Architecture and Connectivity"}),"\n",(0,t.jsx)(n.li,{children:"Current Network Architectures"}),"\n",(0,t.jsx)(n.li,{children:"Transition to Service-Oriented Architecture"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"2-architecture-specific-implementations",children:["2. ",(0,t.jsx)(n.strong,{children:"Architecture-Specific Implementations"})]}),"\n",(0,t.jsx)(n.p,{children:"In diesem Kapitel werden verschiedene Architekturans\xe4tze in Fahrzeugen und deren spezifische Implementierungen beschrieben."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Wichtige Inhalte:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Distributed Architecture","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\xdcberblick \xfcber verteilte Systeme in der Fahrzeugarchitektur"}),"\n",(0,t.jsx)(n.li,{children:"Vorteile und Herausforderungen verteilter Systeme"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Centralized Architecture","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\xdcbergang von verteilten zu zentralisierten Systemen"}),"\n",(0,t.jsx)(n.li,{children:"Anwendungsf\xe4lle und Leistungsverbesserungen in zentralisierten Architekturen"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Domain-Centralized Architecture","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Funktionale Segmentierung in Dom\xe4nen (z. B. Antriebsstrang, Infotainment)"}),"\n",(0,t.jsx)(n.li,{children:"Integrationsherausforderungen und L\xf6sungen"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Zonal Architecture","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\xdcbergang von Dom\xe4nen- zu zonalen Systemen"}),"\n",(0,t.jsx)(n.li,{children:"Vorteile reduzierter Verkabelung und verbesserter Skalierbarkeit"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"3-core-concepts-of-service-oriented-architectures",children:["3. ",(0,t.jsx)(n.strong,{children:"Core Concepts of Service-Oriented Architectures"})]}),"\n",(0,t.jsx)(n.p,{children:"Dieser Abschnitt behandelt die zentralen Konzepte und Prinzipien der serviceorientierten Fahrzeugarchitektur."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Wichtige Inhalte:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Principles Behind Service-Oriented Vehicle Architecture"}),"\n",(0,t.jsx)(n.li,{children:"\xdcberblick \xfcber Service Providers"}),"\n",(0,t.jsx)(n.li,{children:"Anwendungsf\xe4lle der Service-Oriented Vehicle Architecture"}),"\n",(0,t.jsx)(n.li,{children:"Ziele der Service-Oriented Architecture"}),"\n",(0,t.jsx)(n.li,{children:"Onboard Vehicle API"}),"\n",(0,t.jsx)(n.li,{children:"Kommunikationsmuster und -architekturen"}),"\n",(0,t.jsx)(n.li,{children:"Ziele und Vorteile der Architektur"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"4-technical-frameworks-and-protocols",children:["4. ",(0,t.jsx)(n.strong,{children:"Technical Frameworks and Protocols"})]}),"\n",(0,t.jsx)(n.p,{children:"In diesem Kapitel werden die technischen Rahmenwerke und Protokolle erl\xe4utert, die f\xfcr SOVA relevant sind."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Wichtige Inhalte:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\xdcberblick \xfcber SOME/IP"}),"\n",(0,t.jsx)(n.li,{children:"Datenaustausch zwischen Service Providers und Clients"}),"\n",(0,t.jsx)(n.li,{children:'Definition und Erkl\xe4rung von "Service"'}),"\n",(0,t.jsx)(n.li,{children:"Service-Oriented Communication: Terminologie"}),"\n",(0,t.jsx)(n.li,{children:"Onboard Vehicle API: Interface Design und Dokumentation"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"5-design-patterns-for-vehicle-communication",children:["5. ",(0,t.jsx)(n.strong,{children:"Design Patterns for Vehicle Communication"})]}),"\n",(0,t.jsx)(n.p,{children:"Dieser Abschnitt konzentriert sich auf Designmuster f\xfcr die Fahrzeugkommunikation."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Wichtige Inhalte:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Service Design Patterns"}),"\n",(0,t.jsx)(n.li,{children:"SOME/IP und Client-Server-Kommunikation in SOA"}),"\n",(0,t.jsx)(n.li,{children:"Kategorisierung von Methoden in der Onboard Vehicle API"}),"\n",(0,t.jsx)(n.li,{children:"Response Design Patterns (z. B. Return PDU)"}),"\n",(0,t.jsx)(n.li,{children:"Umgang mit State Events in der Onboard Vehicle API"}),"\n",(0,t.jsx)(n.li,{children:"Strukturierung von Events in der Onboard Vehicle API"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"6-state-management-and-resource-control",children:["6. ",(0,t.jsx)(n.strong,{children:"State Management and Resource Control"})]}),"\n",(0,t.jsx)(n.p,{children:"Dieser Abschnitt behandelt das Zustandsmanagement und die Kontrolle von Ressourcen in der Fahrzeugarchitektur."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Wichtige Inhalte:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Designziele von State Events f\xfcr Effizienz"}),"\n",(0,t.jsx)(n.li,{children:"Fire-and-Forget-Methoden in der Client-Server-Kommunikation"}),"\n",(0,t.jsx)(n.li,{children:"\xc4nderungen an Fahrzeugressourcen"}),"\n",(0,t.jsx)(n.li,{children:"Serverantworten auf Ressourcenauswirkungen"}),"\n",(0,t.jsx)(n.li,{children:"Unterscheidung von Ressourcen-Feedback in der Onboard API"}),"\n",(0,t.jsx)(n.li,{children:"Standards f\xfcr das Ressourcenmanagement im Fahrzeug"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"7-access-control-and-coordination-patterns",children:["7. ",(0,t.jsx)(n.strong,{children:"Access Control and Coordination Patterns"})]}),"\n",(0,t.jsx)(n.p,{children:"In diesem Kapitel werden Zugriffssteuerungs- und Koordinationsmuster behandelt."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Wichtige Inhalte:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Client Categorization for Authorization"}),"\n",(0,t.jsx)(n.li,{children:"Universally Unique Categories (UUCategory)"}),"\n",(0,t.jsx)(n.li,{children:"Client Whitelisting for Authorization"}),"\n",(0,t.jsx)(n.li,{children:"Typen und Verwaltung von Whitelists"}),"\n",(0,t.jsx)(n.li,{children:"Access Coordination for Multi-Client Scenarios"}),"\n",(0,t.jsx)(n.li,{children:"Koordination des Ressourcenzugriffs"}),"\n",(0,t.jsx)(n.li,{children:"Layering Patterns for Resource Management"}),"\n",(0,t.jsx)(n.li,{children:"Access Coordination Design Layers"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>c});var i=r(96540);const t={},s=i.createContext(t);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);