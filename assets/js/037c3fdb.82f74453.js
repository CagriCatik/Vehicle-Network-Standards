"use strict";(self.webpackChunkvns=self.webpackChunkvns||[]).push([[39807],{41341:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>g,frontMatter:()=>t,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"CAN/kommunikation/buslogik","title":"CAN-Buslogik","description":"Der Controller Area Network (CAN) Bus ist ein robustes Fahrzeugnetzwerk, das es Mikrocontrollern und Ger\xe4ten erm\xf6glicht, ohne einen Host-Computer direkt miteinander zu kommunizieren. CAN-Busse sind in der Automobilindustrie weit verbreitet und werden f\xfcr verschiedene elektronische Steuerger\xe4te (ECUs) genutzt. Ein tiefes Verst\xe4ndnis der CAN-Buslogik ist entscheidend f\xfcr die Diagnose und das Design von Fahrzeugnetzen. Diese Anleitung gibt eine detaillierte Erkl\xe4rung der CAN-Buslogik basierend auf den bereitgestellten Informationen und Abbildungen.","source":"@site/docs/CAN/02_kommunikation/07_buslogik.md","sourceDirName":"CAN/02_kommunikation","slug":"/CAN/kommunikation/buslogik","permalink":"/Vehicle-Network-Standards/docs/CAN/kommunikation/buslogik","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/CAN/02_kommunikation/07_buslogik.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{},"sidebar":"canSidebar","previous":{"title":"Busankopplung","permalink":"/Vehicle-Network-Standards/docs/CAN/kommunikation/buskopplung"},"next":{"title":"CAN-Kommunikationsprinzip","permalink":"/Vehicle-Network-Standards/docs/CAN/kommunikation/kommunikationsprinzip"}}');var r=i(74848),d=i(28453);const t={},l="CAN-Buslogik",o={},u=[{value:"Dominanter und Rezessiver Buspegel",id:"dominanter-und-rezessiver-buspegel",level:2},{value:"UND-Logik",id:"und-logik",level:2},{value:"Funktionsweise der Schaltung",id:"funktionsweise-der-schaltung",level:2},{value:"Verst\xe4ndnis der Wired-AND-Buslogik",id:"verst\xe4ndnis-der-wired-and-buslogik",level:2},{value:"Anwendung in Fahrzeugen",id:"anwendung-in-fahrzeugen",level:2}];function a(e){const n={h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"can-buslogik",children:"CAN-Buslogik"})}),"\n",(0,r.jsx)(n.p,{children:"Der Controller Area Network (CAN) Bus ist ein robustes Fahrzeugnetzwerk, das es Mikrocontrollern und Ger\xe4ten erm\xf6glicht, ohne einen Host-Computer direkt miteinander zu kommunizieren. CAN-Busse sind in der Automobilindustrie weit verbreitet und werden f\xfcr verschiedene elektronische Steuerger\xe4te (ECUs) genutzt. Ein tiefes Verst\xe4ndnis der CAN-Buslogik ist entscheidend f\xfcr die Diagnose und das Design von Fahrzeugnetzen. Diese Anleitung gibt eine detaillierte Erkl\xe4rung der CAN-Buslogik basierend auf den bereitgestellten Informationen und Abbildungen."}),"\n",(0,r.jsx)(n.h2,{id:"dominanter-und-rezessiver-buspegel",children:"Dominanter und Rezessiver Buspegel"}),"\n",(0,r.jsx)(n.p,{children:"In einem CAN-Netzwerk ist die Unterscheidung zwischen dominantem und rezessivem Buspegel entscheidend:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dominanter Buspegel:"}),' Entspricht der logischen "0".']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rezessiver Buspegel:"}),' Entspricht der logischen "1".']}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Ein dominanter Pegel \xfcberschreibt immer einen rezessiven Pegel. Das bedeutet, wenn verschiedene CAN-Knoten gleichzeitig dominante und rezessive Pegel senden, nimmt der CAN-Bus den dominanten Pegel an. Nur wenn alle CAN-Knoten einen rezessiven Pegel senden, wird dieser auf dem Bus aktiv."}),"\n",(0,r.jsx)(n.h2,{id:"und-logik",children:"UND-Logik"}),"\n",(0,r.jsx)(n.p,{children:'Dieses Verhalten entspricht einer UND-Logik, die physikalisch durch eine Open-Collector-Schaltung realisiert wird. Die Open-Collector-Ausg\xe4nge der CAN-Knoten sind miteinander verbunden und arbeiten nach dem Prinzip, dass der Buspegel "0" (dominant) ist, sobald ein Knoten diesen Pegel sendet.'}),"\n",(0,r.jsx)(n.p,{children:"Die Abbildung zeigt drei CAN-Knoten (Knoten 1, Knoten 2 und Knoten 3), die jeweils mit dem CAN-Bus verbunden sind. Jeder Knoten kann entweder einen dominanten oder einen rezessiven Pegel senden. Die Tabelle neben der Abbildung zeigt die Logik der gesendeten Pegel und deren Ergebnis auf dem CAN-Bus."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sender 1, 2 und 3:"})," Diese repr\xe4sentieren die Signale der drei Knoten. Jeder Knoten kann ein Bit senden, das entweder 0 (dominant) oder 1 (rezessiv) ist."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CAN-Bus:"})," Der kombinierte Pegel auf dem Bus, der durch die dominante Logik der Open-Collector-Schaltung bestimmt wird."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"CAN-Knoten",src:i(87117).A+"",width:"955",height:"512"})}),"\n",(0,r.jsx)(n.h2,{id:"funktionsweise-der-schaltung",children:"Funktionsweise der Schaltung"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Initialzustand:"}),' Der Widerstand R zieht den Bus auf den rezessiven Pegel "1", wenn keine Knoten senden.']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Senden eines dominanten Pegels:"}),' Wenn ein Knoten einen dominanten Pegel "0" sendet, zieht er den Bus auf diesen Pegel, unabh\xe4ngig davon, was die anderen Knoten senden.']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rezessiver Pegel:"}),' Der Bus bleibt nur dann auf dem rezessiven Pegel "1", wenn alle Knoten rezessiv senden.']}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"verst\xe4ndnis-der-wired-and-buslogik",children:"Verst\xe4ndnis der Wired-AND-Buslogik"}),"\n",(0,r.jsx)(n.p,{children:"Die Open-Collector-Schaltung erm\xf6glicht eine effektive Realisierung der Wired-AND-Logik. Die Tabelle in der Abbildung zeigt verschiedene Szenarien, in denen die Kombination der gesendeten Pegel durch die Knoten das Ergebnis auf dem CAN-Bus beeinflusst."}),"\n",(0,r.jsx)(n.p,{children:"Beispiel:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sender 1:"})," 0 1 0 1 0 1 0 1"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sender 2:"})," 0 0 1 1 0 1 1 1"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sender 3:"})," 0 0 0 1 1 1 1 1"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CAN-Bus:"})," 0 0 0 0 0 1 0 1"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:'Hier zeigt sich, dass der CAN-Bus nur dann "1" (rezessiv) ist, wenn alle Sender diesen Pegel senden.'}),"\n",(0,r.jsx)(n.h2,{id:"anwendung-in-fahrzeugen",children:"Anwendung in Fahrzeugen"}),"\n",(0,r.jsx)(n.p,{children:"Diese Logik erm\xf6glicht eine zuverl\xe4ssige Kommunikation und Fehlererkennung in Fahrzeugen. Jeder Knoten kann den Zustand des Busses \xfcberwachen und feststellen, ob sein gesendetes Signal korrekt \xfcbertragen wird. Falls ein dominantes Signal gesendet wird und ein rezessiver Pegel gelesen wird, erkennt der Knoten eine Kollision und kann entsprechend reagieren."})]})}function g(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},87117:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1716539577015-d3be0e3a2a20b895c8118002dd011b4d.png"},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var s=i(96540);const r={},d=s.createContext(r);function t(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);