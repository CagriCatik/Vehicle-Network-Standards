"use strict";(self.webpackChunkvns=self.webpackChunkvns||[]).push([[93877],{22712:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"AUTOSAR/rte/buffered","title":"Sender/Receiver Communication: Buffered","description":"This documentation details Buffered Sender/Receiver (S/R) Communication in AUTOSAR, a mechanism leveraging global buffers to preserve data consistency and ensure deterministic behavior. This approach also uses the last-is-best semantic for data transfer.","source":"@site/docs/AUTOSAR/03_rte/07_buffered.md","sourceDirName":"AUTOSAR/03_rte","slug":"/AUTOSAR/rte/buffered","permalink":"/Vehicle-Network-Standards/docs/AUTOSAR/rte/buffered","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/AUTOSAR/03_rte/07_buffered.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{},"sidebar":"autosarSidebar","previous":{"title":"Sender/Receiver Communication: Direct","permalink":"/Vehicle-Network-Standards/docs/AUTOSAR/rte/direct"},"next":{"title":"Sender/Receiver Communication: Queued","permalink":"/Vehicle-Network-Standards/docs/AUTOSAR/rte/queued"}}');var r=i(74848),t=i(28453);const l={},a="Sender/Receiver Communication: Buffered",d={},c=[{value:"<strong>1. Key Features of Buffered Communication</strong>",id:"1-key-features-of-buffered-communication",level:2},{value:"<strong>1.1 Last-Is-Best Semantic</strong>",id:"11-last-is-best-semantic",level:3},{value:"<strong>1.2 Buffered Data Access</strong>",id:"12-buffered-data-access",level:3},{value:"<strong>1.3 Immutable Data During Execution</strong>",id:"13-immutable-data-during-execution",level:3},{value:"<strong>2. Communication Workflow</strong>",id:"2-communication-workflow",level:2},{value:"<strong>2.1 Write Operation</strong>",id:"21-write-operation",level:3},{value:"Code Example:",id:"code-example",level:4},{value:"<strong>2.2 Read Operation</strong>",id:"22-read-operation",level:3},{value:"Code Example:",id:"code-example-1",level:4},{value:"<strong>3. Function Prototypes</strong>",id:"3-function-prototypes",level:2},{value:"<strong>Rte_IRead</strong>",id:"rte_iread",level:3},{value:"Example:",id:"example",level:4},{value:"<strong>Rte_IWrite</strong>",id:"rte_iwrite",level:3},{value:"Example:",id:"example-1",level:4},{value:"<strong>4. Data Flow</strong>",id:"4-data-flow",level:2},{value:"<strong>5. Advantages of Buffered Communication</strong>",id:"5-advantages-of-buffered-communication",level:2},{value:"<strong>6. Limitations</strong>",id:"6-limitations",level:2},{value:"<strong>7. Use Cases</strong>",id:"7-use-cases",level:2},{value:"<strong>8. Summary</strong>",id:"8-summary",level:2},{value:"<strong>Key Takeaways:</strong>",id:"key-takeaways",level:3}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"senderreceiver-communication-buffered",children:"Sender/Receiver Communication: Buffered"})}),"\n",(0,r.jsxs)(n.p,{children:["This documentation details ",(0,r.jsx)(n.strong,{children:"Buffered Sender/Receiver (S/R) Communication"})," in AUTOSAR, a mechanism leveraging global buffers to preserve data consistency and ensure deterministic behavior. This approach also uses the ",(0,r.jsx)(n.strong,{children:"last-is-best semantic"})," for data transfer."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1-key-features-of-buffered-communication",children:(0,r.jsx)(n.strong,{children:"1. Key Features of Buffered Communication"})}),"\n",(0,r.jsx)(n.h3,{id:"11-last-is-best-semantic",children:(0,r.jsx)(n.strong,{children:"1.1 Last-Is-Best Semantic"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Definition:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Similar to direct communication, buffered communication prioritizes the most recent data."}),"\n",(0,r.jsx)(n.li,{children:"Overwrites previous values in the buffer but guarantees consistency during a Runnable's execution."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"12-buffered-data-access",children:(0,r.jsx)(n.strong,{children:"1.2 Buffered Data Access"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Before a Runnable executes, the RTE ",(0,r.jsx)(n.strong,{children:"copies the most recent value"})," into a local buffer specific to the Runnable."]}),"\n",(0,r.jsxs)(n.li,{children:["After the Runnable completes execution, the RTE ",(0,r.jsx)(n.strong,{children:"copies the modified value"})," (if any) back to the global buffer."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"13-immutable-data-during-execution",children:(0,r.jsx)(n.strong,{children:"1.3 Immutable Data During Execution"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Data values ",(0,r.jsx)(n.strong,{children:"cannot change mid-execution"})," of a Runnable."]}),"\n",(0,r.jsx)(n.li,{children:"Guarantees a stable and deterministic input for the duration of the Runnable."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"2-communication-workflow",children:(0,r.jsx)(n.strong,{children:"2. Communication Workflow"})}),"\n",(0,r.jsx)(n.h3,{id:"21-write-operation",children:(0,r.jsx)(n.strong,{children:"2.1 Write Operation"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The sender Runnable invokes the ",(0,r.jsx)(n.code,{children:"Rte_IWrite"})," API to update the global buffer with a new value."]}),"\n",(0,r.jsx)(n.li,{children:"The RTE ensures this value is consistent across Runnables reading from this buffer."}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"code-example",children:"Code Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"void Rte_IWrite_<r>_<p>_<d>(<DataType> data);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"22-read-operation",children:(0,r.jsx)(n.strong,{children:"2.2 Read Operation"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The receiver Runnable retrieves the latest buffered value using the ",(0,r.jsx)(n.code,{children:"Rte_IRead"})," API."]}),"\n",(0,r.jsx)(n.li,{children:"The value read is guaranteed not to change during the Runnable's execution."}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"code-example-1",children:"Code Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"<DataType> Rte_IRead_<r>_<p>_<d>(void);\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"3-function-prototypes",children:(0,r.jsx)(n.strong,{children:"3. Function Prototypes"})}),"\n",(0,r.jsx)(n.h3,{id:"rte_iread",children:(0,r.jsx)(n.strong,{children:"Rte_IRead"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"<DataType> Rte_IRead_<r>_<p>_<d>(void);\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The most recent value from the RTE buffer."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Usage:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Called within a Runnable to access consistent input data."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"example",children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"int32 temperature = Rte_IRead_TemperatureModule_CurrentTemp();\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rte_iwrite",children:(0,r.jsx)(n.strong,{children:"Rte_IWrite"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"void Rte_IWrite_<r>_<p>_<d>(IN <DataType> data);\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"}),": The value to be written to the RTE buffer."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Usage:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Called within a Runnable to write output data."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"example-1",children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"Rte_IWrite_ClimateControl_TargetTemp(25);\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"4-data-flow",children:(0,r.jsx)(n.strong,{children:"4. Data Flow"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Action"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Component"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Description"})})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Buffering Before Execution"})}),(0,r.jsx)(n.td,{children:"RTE"}),(0,r.jsx)(n.td,{children:"Copies global buffer values to a local buffer for the Runnable."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Read Operation"})}),(0,r.jsx)(n.td,{children:"Runnable"}),(0,r.jsxs)(n.td,{children:["Accesses buffered data during execution via ",(0,r.jsx)(n.code,{children:"Rte_IRead"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Write Operation"})}),(0,r.jsx)(n.td,{children:"Runnable"}),(0,r.jsxs)(n.td,{children:["Updates the local buffer via ",(0,r.jsx)(n.code,{children:"Rte_IWrite"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Buffering After Execution"})}),(0,r.jsx)(n.td,{children:"RTE"}),(0,r.jsx)(n.td,{children:"Updates the global buffer with values from the local buffer."})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"5-advantages-of-buffered-communication",children:(0,r.jsx)(n.strong,{children:"5. Advantages of Buffered Communication"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Deterministic Behavior:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Prevents data inconsistencies during Runnable execution."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Stability During Execution:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ensures input data remains constant, improving reliability."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Synchronization:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Buffered updates allow consistent data exchange across multiple Runnables."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"6-limitations",children:(0,r.jsx)(n.strong,{children:"6. Limitations"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Increased Overhead:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The RTE must manage additional copying operations between local and global buffers."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Higher Memory Usage:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Requires dedicated memory for both global and local buffers."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"7-use-cases",children:(0,r.jsx)(n.strong,{children:"7. Use Cases"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Control Systems:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Scenarios where deterministic and stable input is essential, such as engine control."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Time-Critical Applications:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Buffered communication ensures predictable behavior during critical operations."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"8-summary",children:(0,r.jsx)(n.strong,{children:"8. Summary"})}),"\n",(0,r.jsxs)(n.p,{children:["Buffered Sender/Receiver Communication in AUTOSAR provides a reliable and deterministic method for exchanging data between SWCs. By leveraging ",(0,r.jsx)(n.strong,{children:"local and global buffers"}),", it ensures consistency and stability during Runnable execution."]}),"\n",(0,r.jsx)(n.h3,{id:"key-takeaways",children:(0,r.jsx)(n.strong,{children:"Key Takeaways:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Buffered communication uses ",(0,r.jsx)(n.code,{children:"Rte_IRead"})," and ",(0,r.jsx)(n.code,{children:"Rte_IWrite"})," for data access."]}),"\n",(0,r.jsx)(n.li,{children:"Ensures input data remains stable during execution."}),"\n",(0,r.jsx)(n.li,{children:"Best suited for deterministic and time-critical applications."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(96540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);