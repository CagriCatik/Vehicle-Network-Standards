"use strict";(self.webpackChunkvns=self.webpackChunkvns||[]).push([[34662],{72355:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>o,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"LIN/Netzwerkmanagement/netzwerkmanagement","title":"Netzwerkmanagement","description":"Zustandsmodell","source":"@site/docs/LIN/08_Netzwerkmanagement/01_netzwerkmanagement.md","sourceDirName":"LIN/08_Netzwerkmanagement","slug":"/LIN/Netzwerkmanagement/netzwerkmanagement","permalink":"/Vehicle-Network-Standards/docs/LIN/Netzwerkmanagement/netzwerkmanagement","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/LIN/08_Netzwerkmanagement/01_netzwerkmanagement.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"linSidebar","previous":{"title":"Netzwerkmanagement","permalink":"/Vehicle-Network-Standards/docs/LIN/Netzwerkmanagement/"},"next":{"title":"README","permalink":"/Vehicle-Network-Standards/docs/LIN/LIN/"}}');var a=t(74848),i=t(28453);const r={},d="Netzwerkmanagement",l={},c=[];function u(e){const n={h1:"h1",header:"header",img:"img",p:"p",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"netzwerkmanagement",children:"Netzwerkmanagement"})}),"\n",(0,a.jsx)(n.p,{children:"Zustandsmodell\nIm Protokoll ist ein eigenes Netzwerkmanagement definiert. Es sieht f\xfcr die Slaves vier Zust\xe4nde vor: Power Off, Initialisierung, Betrieb und Sleep. Auch die Zustands\xfcberg\xe4nge sind definiert (siehe interaktive Grafik Slave Zustandsmodell). Durch Power On wechselt ein Slave in den Zustand Initialisierung. Dieser muss nach 100 ms abgeschlossen sein. Dann wechselt der Slave selbstt\xe4tig in den Betriebszustand."}),"\n",(0,a.jsx)(n.p,{children:"Sleep-Kommando\nMit \xdcbertragung des Goto-sleep-Kommandos kann der Master alle Slaves in den Zustand Sleep versetzen. Bei diesem Kommando handelt es sich um einen Master Request Frame, der im ersten Datenbyte den Wert 0x00 aufweist (entspricht NAD=0). Die sieben weiteren Datenbytes werden mit 0xFF \xfcbertragen."}),"\n",(0,a.jsx)(n.p,{children:"Automatischer Sleep Mode\nDie Slaves wechseln auch dann in den Zustand Sleep, wenn vier bis zehn Sekunden lang keine Busaktivit\xe4t vorhanden ist. Laut Spezifikation ist dabei nicht zwingend erforderlich, dass der \xdcbergang in diesen Zustand mit dem \xdcbergang in den Zustand Low Power einhergehen muss. Das bedeutet, dass der Mikrocontroller nicht zwingend in einen Energiesparmodus umgeschaltet wird, in dem nicht ben\xf6tigte Hardware Ressourcen abgeschaltet sind."}),"\n",(0,a.jsx)(n.p,{children:"Wakeup\nNeben dem Master besitzt jeder Slave die M\xf6glichkeit das Cluster aufzuwecken. Dazu wird ein Wecksignal (Wakeup) am Bus angelegt (siehe interaktive Grafik Slave Zustandsmodell). Hierbei handelt es sich um einen dominanten Puls, der mindestens 250 \xb5s und maximal 5 ms andauert. Nach Erkennung eines Wakeup verlassen die Knoten den Zustand Sleep und wechseln in den Initialisierungszustand. Nach weiteren 100 ms wechseln sie in den Betriebszustand."}),"\n",(0,a.jsx)(n.p,{children:'"Schl\xe4friger" Master\nWenn ein Slave f\xfcr das Aufwecken verantwortlich ist und nach der Initialisierung f\xfcr weitere 150 ms keinen Header erkennt, so \xfcbertr\xe4gt der Knoten ein weiteres Wecksignal (siehe interaktive Grafik Wakeup Prozedur). Sollte auch dieser und der n\xe4chste Aufweckversuch fehlschlagen (3 Wecksignale = 1 Wakeup Block), setzt der Slave die Aufweckprozedur f\xfcr 1,5 s aus, um im Anschluss eventuell erneut zu beginnen. Dies h\xe4ngt von den Vorgaben im Systemdesign ab.'}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"slave",src:t(64726).A+"",width:"895",height:"603"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"wakeup prozedur",src:t(70358).A+"",width:"1015",height:"770"})})]})}function o(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},64726:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/slave_zustandsmodell-e37850ae124a13db80de8a41b1c20fb6.png"},70358:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/wakeup_prozedur-88f834816628c18b292dc9dd83c51e3c.png"},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var s=t(96540);const a={},i=s.createContext(a);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);