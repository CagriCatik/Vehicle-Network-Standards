"use strict";(self.webpackChunkvns=self.webpackChunkvns||[]).push([[16950],{69884:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"UDS/capl/Response-Parsing","title":"Response Parsing (Service Responses)","description":"Overview","source":"@site/docs/UDS/06_capl/04_Response-Parsing.md","sourceDirName":"UDS/06_capl","slug":"/UDS/capl/Response-Parsing","permalink":"/Vehicle-Network-Standards/docs/UDS/capl/Response-Parsing","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/UDS/06_capl/04_Response-Parsing.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"udsSidebar","previous":{"title":"Write Data by Identifier - 0x2E","permalink":"/Vehicle-Network-Standards/docs/UDS/capl/Write-Data-by-ID"},"next":{"title":"Log File Handling","permalink":"/Vehicle-Network-Standards/docs/UDS/capl/Log-File-Handling"}}');var r=s(74848),t=s(28453);const o={},l="Response Parsing (Service Responses)",c={},d=[{value:"Overview",id:"overview",level:2},{value:"Implementation Details",id:"implementation-details",level:2},{value:"1. Positive Response",id:"1-positive-response",level:3},{value:"2. Negative Response",id:"2-negative-response",level:3},{value:"3. Example Response IDs",id:"3-example-response-ids",level:3},{value:"CAPL Script",id:"capl-script",level:2},{value:"CAPL Implementation:",id:"capl-implementation",level:3},{value:"Sequence Diagram",id:"sequence-diagram",level:2},{value:"Common NRC Codes",id:"common-nrc-codes",level:2},{value:"How to Use",id:"how-to-use",level:2},{value:"Example Log Output",id:"example-log-output",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"response-parsing-service-responses",children:"Response Parsing (Service Responses)"})}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Response parsing in UDS is the process of handling and interpreting responses from an ECU (Electronic Control Unit). These responses could either confirm the success of a request (Positive Response) or indicate an error (Negative Response)."}),"\n",(0,r.jsx)(n.p,{children:"The CAPL script processes these responses by listening for specific message IDs and interpreting the data contained in the payload."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,r.jsx)(n.h3,{id:"1-positive-response",children:"1. Positive Response"}),"\n",(0,r.jsx)(n.p,{children:"A Positive Response has the following characteristics:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Service ID: The response includes the original service ID with a value offset of ",(0,r.jsx)(n.code,{children:"0x40"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Structure:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Byte 0: PCI (Protocol Control Information)."}),"\n",(0,r.jsx)(n.li,{children:"Byte 1: Service ID (original ID + 0x40)."}),"\n",(0,r.jsx)(n.li,{children:"Byte 2+: Additional response data."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-negative-response",children:"2. Negative Response"}),"\n",(0,r.jsx)(n.p,{children:"A Negative Response (NRC - Negative Response Code) has the following characteristics:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Service ID: Always ",(0,r.jsx)(n.code,{children:"0x7F"}),", indicating an error response."]}),"\n",(0,r.jsxs)(n.li,{children:["Structure:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Byte 0: PCI."}),"\n",(0,r.jsx)(n.li,{children:"Byte 1: Original Service ID."}),"\n",(0,r.jsx)(n.li,{children:"Byte 2: NRC (provides the error type)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"3-example-response-ids",children:"3. Example Response IDs"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Positive Response for Diagnostic Session Control: ",(0,r.jsx)(n.code,{children:"0x50"})," (Service ID: ",(0,r.jsx)(n.code,{children:"0x10 + 0x40"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Negative Response: ",(0,r.jsx)(n.code,{children:"0x7F"})," with an NRC."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"capl-script",children:"CAPL Script"}),"\n",(0,r.jsx)(n.h3,{id:"capl-implementation",children:"CAPL Implementation:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-capl",children:'on message 0x1E8 { // Example ECU response message ID\n  if (this.byte(1) == 0x50) {\n    write("Positive Response received: Diagnostic Session Control.");\n  } else if (this.byte(1) == 0x7F) {\n    // Negative Response\n    int nrc = this.byte(2); // Negative Response Code\n    switch (nrc) {\n      case 0x12:\n        write("NRC: Subfunction not supported.");\n        break;\n      case 0x13:\n        write("NRC: Incorrect message length or invalid format.");\n        break;\n      default:\n        writef("NRC: 0x%X received.", nrc);\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"sequence-diagram",children:"Sequence Diagram"}),"\n",(0,r.jsx)(n.p,{children:"The following sequence diagram illustrates the interaction between the Tester and the ECU during the response parsing process:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mermaid",children:"sequenceDiagram\n    participant Tester as Tester\n    participant ECU as Electronic Control Unit\n\n    Tester->>ECU: Send Service Request (e.g., Diagnostic Session Control - 0x10)\n    ECU--\x3e>Tester: Positive Response (e.g., 0x50 for success)\n    Note over Tester,ECU: Positive Response indicates successful execution.\n\n    Tester->>ECU: Send another Service Request (e.g., Write Data by Identifier - 0x2E)\n    ECU--\x3e>Tester: Negative Response (e.g., 0x7F with NRC)\n    Note over Tester,ECU: NRC indicates an error (e.g., Subfunction not supported - 0x12)\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"common-nrc-codes",children:"Common NRC Codes"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"NRC Code"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"0x12"})}),(0,r.jsx)(n.td,{children:"Subfunction not supported"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"0x13"})}),(0,r.jsx)(n.td,{children:"Incorrect message length or invalid format"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"0x22"})}),(0,r.jsx)(n.td,{children:"Conditions not correct"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"0x31"})}),(0,r.jsx)(n.td,{children:"Request out of range"})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"how-to-use",children:"How to Use"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Listen for ECU Responses: Use the ",(0,r.jsx)(n.code,{children:"on message"})," event to capture incoming responses."]}),"\n",(0,r.jsxs)(n.li,{children:["Parse the Response:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Check Byte 1 for the Service ID."}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"0x7F"}),", handle the NRC in Byte 2."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Log Responses: Log details to the trace window or a log file for debugging."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"example-log-output",children:"Example Log Output"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Positive Response received: Diagnostic Session Control.\nNRC: Subfunction not supported.\nNRC: Incorrect message length or invalid format.\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var i=s(96540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);