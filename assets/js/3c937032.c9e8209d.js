"use strict";(self.webpackChunkvns=self.webpackChunkvns||[]).push([[84787],{97029:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"AUTOSAR/rte/sender-receiver-com","title":"Sender/Receiver Communication: Data Element Invalidation","description":"This documentation provides a comprehensive understanding of data element invalidation in AUTOSAR Sender/Receiver communication. This mechanism ensures robust handling of invalid or erroneous data values, enhancing system reliability and safety.","source":"@site/docs/AUTOSAR/03_rte/09_sender-receiver-com.md","sourceDirName":"AUTOSAR/03_rte","slug":"/AUTOSAR/rte/sender-receiver-com","permalink":"/Vehicle-Network-Standards/docs/AUTOSAR/rte/sender-receiver-com","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/AUTOSAR/03_rte/09_sender-receiver-com.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{},"sidebar":"autosarSidebar","previous":{"title":"Sender/Receiver Communication: Queued","permalink":"/Vehicle-Network-Standards/docs/AUTOSAR/rte/queued"},"next":{"title":"Client/Server Communication in AUTOSAR","permalink":"/Vehicle-Network-Standards/docs/AUTOSAR/rte/client-server-com"}}');var r=i(74848),s=i(28453);const t={},d="Sender/Receiver Communication: Data Element Invalidation",l={},o=[{value:"<strong>1. Overview</strong>",id:"1-overview",level:2},{value:"<strong>What is Data Element Invalidation?</strong>",id:"what-is-data-element-invalidation",level:3},{value:"<strong>2. Use Case</strong>",id:"2-use-case",level:2},{value:"<strong>3. How Data Element Invalidation Works</strong>",id:"3-how-data-element-invalidation-works",level:2},{value:"<strong>3.1 Sender-Side Invalidation</strong>",id:"31-sender-side-invalidation",level:3},{value:"Sender-Side API Example:",id:"sender-side-api-example",level:4},{value:"Code Example:",id:"code-example",level:4},{value:"<strong>3.2 Receiver-Side Reaction</strong>",id:"32-receiver-side-reaction",level:3},{value:"Receiver-Side API Examples:",id:"receiver-side-api-examples",level:4},{value:"Code Example (Direct Communication):",id:"code-example-direct-communication",level:4},{value:"Code Example (Buffered Communication):",id:"code-example-buffered-communication",level:4},{value:"<strong>4. Additional Mechanisms</strong>",id:"4-additional-mechanisms",level:2},{value:"<strong>Activation of Runnables</strong>",id:"activation-of-runnables",level:3},{value:"<strong>5. Benefits of Data Element Invalidation</strong>",id:"5-benefits-of-data-element-invalidation",level:2},{value:"<strong>6. Summary</strong>",id:"6-summary",level:2},{value:"<strong>Key Takeaways:</strong>",id:"key-takeaways",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"senderreceiver-communication-data-element-invalidation",children:"Sender/Receiver Communication: Data Element Invalidation"})}),"\n",(0,r.jsxs)(n.p,{children:["This documentation provides a comprehensive understanding of ",(0,r.jsx)(n.strong,{children:"data element invalidation"})," in AUTOSAR Sender/Receiver communication. This mechanism ensures robust handling of invalid or erroneous data values, enhancing system reliability and safety."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1-overview",children:(0,r.jsx)(n.strong,{children:"1. Overview"})}),"\n",(0,r.jsx)(n.h3,{id:"what-is-data-element-invalidation",children:(0,r.jsx)(n.strong,{children:"What is Data Element Invalidation?"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A mechanism to mark data elements as ",(0,r.jsx)(n.strong,{children:"invalid"})," when the sender detects erroneous or unreliable data, such as when a sensor malfunctions or delivers invalid values."]}),"\n",(0,r.jsx)(n.li,{children:"The receiver is notified of the invalidation and can react accordingly."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"2-use-case",children:(0,r.jsx)(n.strong,{children:"2. Use Case"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Typical scenario: A ",(0,r.jsx)(n.strong,{children:"sensor module"})," delivers unreliable or incorrect values (e.g., due to a hardware fault or out-of-range conditions)."]}),"\n",(0,r.jsxs)(n.li,{children:["Only applicable to ",(0,r.jsx)(n.strong,{children:"non-queued communication"})," (",(0,r.jsx)(n.code,{children:"isQueued=false"}),")."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"3-how-data-element-invalidation-works",children:(0,r.jsx)(n.strong,{children:"3. How Data Element Invalidation Works"})}),"\n",(0,r.jsx)(n.h3,{id:"31-sender-side-invalidation",children:(0,r.jsx)(n.strong,{children:"3.1 Sender-Side Invalidation"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Realized by setting an invalid value"})," for the data element."]}),"\n",(0,r.jsxs)(n.li,{children:["The invalidation is performed using the ",(0,r.jsx)(n.code,{children:"Rte_Invalidate_<p>_<d>()"})," API."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"sender-side-api-example",children:"Sender-Side API Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"void Rte_Invalidate_<p>_<d>(void);\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"None."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Effect:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Marks the specified data element as invalid."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"code-example",children:"Code Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"Rte_Invalidate_Sensor_Temperature();\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"32-receiver-side-reaction",children:(0,r.jsx)(n.strong,{children:"3.2 Receiver-Side Reaction"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Evaluation of the Return Type:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The receiver evaluates the return value of the corresponding read function to determine if the data is invalid."}),"\n",(0,r.jsxs)(n.li,{children:["For direct communication:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The return value of ",(0,r.jsx)(n.code,{children:"Rte_Read_<p>_<d>()"})," will be ",(0,r.jsx)(n.code,{children:"RTE_E_INVALID"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["For buffered communication:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The invalidation is checked via ",(0,r.jsx)(n.code,{children:"Rte_IStatus_<re>_<p>_<d>()"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"receiver-side-api-examples",children:"Receiver-Side API Examples:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Direct Communication:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"Std_ReturnType Rte_Read_<p>_<d>(OUT <DataType> *data);\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Returns ",(0,r.jsx)(n.code,{children:"RTE_E_INVALID"})," if the data is marked as invalid."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Buffered Communication:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"Std_ReturnType Rte_IStatus_<re>_<p>_<d>(void);\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Indicates the invalidation status of the data."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"code-example-direct-communication",children:"Code Example (Direct Communication):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"int32_t temperature;\nStd_ReturnType status = Rte_Read_Sensor_Temperature(&temperature);\n\nif (status == RTE_E_INVALID) {\n    // Handle invalid data\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"code-example-buffered-communication",children:"Code Example (Buffered Communication):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"Std_ReturnType status = Rte_IStatus_SensorModule_Temperature();\n\nif (status == RTE_E_INVALID) {\n    // Handle invalid data\n}\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"4-additional-mechanisms",children:(0,r.jsx)(n.strong,{children:"4. Additional Mechanisms"})}),"\n",(0,r.jsx)(n.h3,{id:"activation-of-runnables",children:(0,r.jsx)(n.strong,{children:"Activation of Runnables"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The receiver can activate a Runnable to handle invalid data using the ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"DataReceiveErrorEvent"})}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"5-benefits-of-data-element-invalidation",children:(0,r.jsx)(n.strong,{children:"5. Benefits of Data Element Invalidation"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Error Handling:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Enables detection and appropriate handling of invalid data."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"System Safety:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Prevents the propagation of erroneous data values."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Flexibility:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Supports both direct and buffered communication models."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"6-summary",children:(0,r.jsx)(n.strong,{children:"6. Summary"})}),"\n",(0,r.jsx)(n.p,{children:"Data element invalidation is a crucial feature in AUTOSAR Sender/Receiver communication, providing a structured mechanism to handle erroneous or unreliable data. By marking data as invalid and enabling specific reactions, this approach enhances system safety, reliability, and fault tolerance."}),"\n",(0,r.jsx)(n.h3,{id:"key-takeaways",children:(0,r.jsx)(n.strong,{children:"Key Takeaways:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"Rte_Invalidate"})," on the sender side to mark data as invalid."]}),"\n",(0,r.jsxs)(n.li,{children:["Handle invalid data on the receiver side using ",(0,r.jsx)(n.code,{children:"Rte_Read"})," or ",(0,r.jsx)(n.code,{children:"Rte_IStatus"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Activate error-handling Runnables with ",(0,r.jsx)(n.code,{children:"DataReceiveErrorEvent"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"For detailed configuration and implementation guidelines, refer to the AUTOSAR specification or your system architect."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>d});var a=i(96540);const r={},s=a.createContext(r);function t(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);