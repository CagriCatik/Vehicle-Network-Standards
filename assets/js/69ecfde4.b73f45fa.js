"use strict";(self.webpackChunkvns=self.webpackChunkvns||[]).push([[17541],{26884:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>o,frontMatter:()=>l,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"CAN/datensicherung/logische-fehlererkennung","title":"Fehlererkennungsmechanismen","description":"Das CAN-Protokoll (Controller Area Network) ist ein robustes Kommunikationssystem, das speziell f\xfcr die Automobilindustrie entwickelt wurde, um den Austausch von Daten zwischen verschiedenen elektronischen Steuerger\xe4ten zu erm\xf6glichen. Ein wesentlicher Bestandteil des CAN-Protokolls ist die F\xe4higkeit, Fehler in der Daten\xfcbertragung zu erkennen und zu behandeln. Hierf\xfcr definiert das Protokoll f\xfcnf wesentliche Fehlererkennungsmechanismen:","source":"@site/docs/CAN/05_datensicherung/05_logische-fehlererkennung.md","sourceDirName":"CAN/05_datensicherung","slug":"/CAN/datensicherung/logische-fehlererkennung","permalink":"/Vehicle-Network-Standards/docs/CAN/datensicherung/logische-fehlererkennung","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/CAN/05_datensicherung/05_logische-fehlererkennung.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"canSidebar","previous":{"title":"Terminierung","permalink":"/Vehicle-Network-Standards/docs/CAN/datensicherung/terminierung"},"next":{"title":"Fehlerbehandlung","permalink":"/Vehicle-Network-Standards/docs/CAN/datensicherung/logische-fehlerbehandlung"}}');var t=r(74848),s=r(28453);const l={},d="Fehlererkennungsmechanismen",c={},h=[{value:"Aufgabenverteilung zwischen Sender und Empf\xe4nger",id:"aufgabenverteilung-zwischen-sender-und-empf\xe4nger",level:3},{value:"Detaillierte Beschreibung der Fehlererkennungsmechanismen",id:"detaillierte-beschreibung-der-fehlererkennungsmechanismen",level:3},{value:"1. Stuff-Check (Empf\xe4nger)",id:"1-stuff-check-empf\xe4nger",level:4},{value:"2. Bitmonitoring (Sender)",id:"2-bitmonitoring-sender",level:4},{value:"3. Form-Check (Empf\xe4nger)",id:"3-form-check-empf\xe4nger",level:4},{value:"4. Cyclic Redundancy Check (CRC) (Empf\xe4nger)",id:"4-cyclic-redundancy-check-crc-empf\xe4nger",level:4},{value:"5. ACK-Check (Sender)",id:"5-ack-check-sender",level:4}];function a(e){const n={h1:"h1",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"fehlererkennungsmechanismen",children:"Fehlererkennungsmechanismen"})}),"\n",(0,t.jsx)(n.p,{children:"Das CAN-Protokoll (Controller Area Network) ist ein robustes Kommunikationssystem, das speziell f\xfcr die Automobilindustrie entwickelt wurde, um den Austausch von Daten zwischen verschiedenen elektronischen Steuerger\xe4ten zu erm\xf6glichen. Ein wesentlicher Bestandteil des CAN-Protokolls ist die F\xe4higkeit, Fehler in der Daten\xfcbertragung zu erkennen und zu behandeln. Hierf\xfcr definiert das Protokoll f\xfcnf wesentliche Fehlererkennungsmechanismen:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Bitmonitoring"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"\xdcberwachung des Botschaftsformats (Form-Check)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"\xdcberwachung der Bitcodierung (Stuff-Check)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Auswertung des Acknowledgements (ACK-Check)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Auswertung der Pr\xfcfsumme (Cyclic Redundancy Check, CRC)"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"CAN-Netzwerk",src:r(16720).A+"",width:"1121",height:"431"})}),"\n",(0,t.jsx)(n.h3,{id:"aufgabenverteilung-zwischen-sender-und-empf\xe4nger",children:"Aufgabenverteilung zwischen Sender und Empf\xe4nger"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Sender"}),": Zust\xe4ndig f\xfcr Bitmonitoring und ACK-Check."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Empf\xe4nger"}),": Verantwortlich f\xfcr Form-Check, Stuff-Check und Cyclic Redundancy Check (CRC)."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"detaillierte-beschreibung-der-fehlererkennungsmechanismen",children:"Detaillierte Beschreibung der Fehlererkennungsmechanismen"}),"\n",(0,t.jsx)(n.h4,{id:"1-stuff-check-empf\xe4nger",children:"1. Stuff-Check (Empf\xe4nger)"}),"\n",(0,t.jsx)(n.p,{children:"Der Stuff-Check \xfcberpr\xfcft den Bitstrom auf Bit-Stuffing-Fehler. Das CAN-Protokoll verlangt, dass nach f\xfcnf aufeinanderfolgenden Bits gleicher Polarit\xe4t ein komplement\xe4res Bit eingef\xfcgt wird, um die Synchronisation zu gew\xe4hrleisten. Wird nach f\xfcnf gleichen Bits ein weiteres Bit derselben Polarit\xe4t entdeckt, liegt ein Stuffingfehler vor."}),"\n",(0,t.jsx)(n.h4,{id:"2-bitmonitoring-sender",children:"2. Bitmonitoring (Sender)"}),"\n",(0,t.jsx)(n.p,{children:"Das Bitmonitoring ist ein Mechanismus, bei dem der Sender jedes gesendete Bit mit dem tats\xe4chlichen Buspegel vergleicht. Ein Bitfehler tritt auf, wenn eine Diskrepanz zwischen dem gesendeten und dem empfangenen Bit festgestellt wird. Dieser Mechanismus gew\xe4hrleistet, dass sowohl globale Fehler als auch Fehler, die lokal beim Sender auftreten, erkannt werden."}),"\n",(0,t.jsx)(n.h4,{id:"3-form-check-empf\xe4nger",children:"3. Form-Check (Empf\xe4nger)"}),"\n",(0,t.jsx)(n.p,{children:"Der Form-Check dient der \xdcberpr\xfcfung des Formats einer CAN-Botschaft. Bestimmte Bitsequenzen m\xfcssen an festgelegten Stellen immer gleich sein, wie zum Beispiel der CRC-Delimiter, der ACK-Delimiter und das Ende der Botschaft (EOF). Diese Felder m\xfcssen vom Sender rezessiv gesendet werden. Ein Formatfehler wird erkannt, wenn der Empf\xe4nger in diesen Feldern einen dominanten Pegel feststellt."}),"\n",(0,t.jsx)(n.h4,{id:"4-cyclic-redundancy-check-crc-empf\xe4nger",children:"4. Cyclic Redundancy Check (CRC) (Empf\xe4nger)"}),"\n",(0,t.jsx)(n.p,{children:"Der CRC ist ein wesentliches Werkzeug zur Erkennung von \xdcbertragungsfehlern. Dabei wird das ankommende Daten- oder Remote-Frame durch ein Polynom R(x) dargestellt, welches ein Vielfaches des durch die ISO 11898-1 spezifizierten Generatorpolynoms G(x) sein sollte. Wenn dies nicht der Fall ist, wurde das Frame w\xe4hrend der \xdcbertragung verf\xe4lscht, was zu einem CRC-Fehler f\xfchrt."}),"\n",(0,t.jsx)(n.h4,{id:"5-ack-check-sender",children:"5. ACK-Check (Sender)"}),"\n",(0,t.jsx)(n.p,{children:"Das CAN-Protokoll beinhaltet einen Best\xe4tigungsmechanismus, bei dem alle Empf\xe4nger einer CAN-Botschaft diese nach dem CRC pr\xfcfen und best\xe4tigen m\xfcssen. Eine positive Best\xe4tigung reicht aus, um dem Sender mitzuteilen, dass die Botschaft korrekt empfangen wurde. Bleibt diese Best\xe4tigung aus, tritt ein ACK-Fehler auf."})]})}function o(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},16720:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/1712276705185-0afbcdec2ac9c1d55718f331c51767d4.png"},28453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>d});var i=r(96540);const t={},s=i.createContext(t);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);