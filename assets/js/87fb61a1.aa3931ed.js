"use strict";(self.webpackChunkvns=self.webpackChunkvns||[]).push([[50433],{24853:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Agile-SCRUM/SAFe/Overview","title":"Overview of Scaled Agile Framework (SAFe)","description":"The Scaled Agile Framework (SAFe) is a methodology designed to scale agile practices across large enterprises. It integrates principles from Agile, Lean, and DevOps to enhance productivity, quality, and time-to-market. SAFe provides a structured approach to align development with business goals, delivering value efficiently and predictably. This tutorial provides a comprehensive overview of SAFe, detailing its structure, roles, and processes.","source":"@site/docs/Agile-SCRUM/09_SAFe/01_Overview.md","sourceDirName":"Agile-SCRUM/09_SAFe","slug":"/Agile-SCRUM/SAFe/Overview","permalink":"/Vehicle-Network-Standards/docs/Agile-SCRUM/SAFe/Overview","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Agile-SCRUM/09_SAFe/01_Overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"agileSidebar","previous":{"title":"Scaled Agile Framework","permalink":"/Vehicle-Network-Standards/docs/Agile-SCRUM/SAFe/"},"next":{"title":"Navigating the Scaled Agile Framework (SAFe)","permalink":"/Vehicle-Network-Standards/docs/Agile-SCRUM/SAFe/SAFe"}}');var r=n(74848),l=n(28453);const t={},a="Overview of Scaled Agile Framework (SAFe)",o={},c=[{value:"Key Levels of SAFe",id:"key-levels-of-safe",level:2},{value:"1. Portfolio Level",id:"1-portfolio-level",level:3},{value:"2. Agile Release Train (ART) Level",id:"2-agile-release-train-art-level",level:3},{value:"3. Agile Team Level",id:"3-agile-team-level",level:3},{value:"Iterations and Program Increments",id:"iterations-and-program-increments",level:2},{value:"Work Breakdown and Timeboxing",id:"work-breakdown-and-timeboxing",level:2},{value:"Roles and Responsibilities",id:"roles-and-responsibilities",level:2},{value:"Portfolio Level",id:"portfolio-level",level:3},{value:"ART Level",id:"art-level",level:3},{value:"Team Level",id:"team-level",level:3},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const i={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"overview-of-scaled-agile-framework-safe",children:"Overview of Scaled Agile Framework (SAFe)"})}),"\n",(0,r.jsx)(i.p,{children:"The Scaled Agile Framework (SAFe) is a methodology designed to scale agile practices across large enterprises. It integrates principles from Agile, Lean, and DevOps to enhance productivity, quality, and time-to-market. SAFe provides a structured approach to align development with business goals, delivering value efficiently and predictably. This tutorial provides a comprehensive overview of SAFe, detailing its structure, roles, and processes."}),"\n",(0,r.jsx)(i.h2,{id:"key-levels-of-safe",children:"Key Levels of SAFe"}),"\n",(0,r.jsx)(i.p,{children:"SAFe operates across three primary levels:"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.strong,{children:"Portfolio Level"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.strong,{children:"Agile Release Train (ART) Level"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.strong,{children:"Agile Team Level"})}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"1-portfolio-level",children:"1. Portfolio Level"}),"\n",(0,r.jsx)(i.p,{children:"At the portfolio level, strategic objectives and initiatives, known as Epics, are defined and managed. This level provides the highest level of organizational alignment and funding."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Epics:"})," Large bodies of work that significantly impact the business. They require a business case and approval from Lean Portfolio Management (LPM)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Lean Portfolio Management (LPM):"})," This group is responsible for strategy, investment funding, and governance."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Enterprise Architect:"})," Provides architectural guidance and strategy across the portfolio."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Program Management Office (PMO):"})," Oversees ART performance metrics, governance, and ensures alignment with strategic objectives."]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"2-agile-release-train-art-level",children:"2. Agile Release Train (ART) Level"}),"\n",(0,r.jsx)(i.p,{children:"The ART is a long-lived team of agile teams, which, along with other stakeholders, incrementally develops, delivers, and operates one or more solutions in a value stream."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Features:"})," Functionalities captured at the ART level, which may span multiple iterations to complete."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ART Backlog:"})," Contains prioritized features, including both business (blue) and enabler (red) features."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Key Roles:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Product Manager:"})," Manages the ART backlog."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"System Architect:"})," Provides architectural guidance and ensures the technical foundation."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Release Train Engineer (RTE):"})," Acts as the Chief Scrum Master, facilitating ART processes and events."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"3-agile-team-level",children:"3. Agile Team Level"}),"\n",(0,r.jsx)(i.p,{children:"Agile teams operate within the ART to deliver small, incremental changes. Each team is cross-functional, containing all necessary skills to define, design, develop, test, and deploy functionalities."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"User Stories:"})," Small units of work that represent customer requirements or needs."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Team Backlog:"})," Managed by the Product Owner, it contains user stories, including business (blue) and enabler (red) stories."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Key Roles:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Product Owner:"})," Manages the team backlog and ensures the team delivers value to the customer."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Scrum Master/Team Coach:"})," Facilitates the team's agile practices and ensures processes are followed."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Developers and Testers:"})," Work together to deliver user stories."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"iterations-and-program-increments",children:"Iterations and Program Increments"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Iterations:"})," Agile teams work in iterations, typically two weeks long, where they plan, execute, and deliver user stories."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Program Increment (PI):"})," A time-boxed planning interval, usually 8-12 weeks, comprising multiple iterations. A PI aims to deliver a set of features that advance the solution towards the business objectives."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"work-breakdown-and-timeboxing",children:"Work Breakdown and Timeboxing"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"User Stories:"})," Should be small enough to fit within a single iteration. Larger stories need to be split."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Features:"})," Should be deliverable within a single PI. Larger features are broken down into smaller features."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Epics:"})," Large-scale initiatives broken down into multiple features across several PIs."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"roles-and-responsibilities",children:"Roles and Responsibilities"}),"\n",(0,r.jsx)(i.h3,{id:"portfolio-level",children:"Portfolio Level"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Lean Portfolio Management:"})," Prioritizes epics, allocates budget, and oversees strategic alignment."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Enterprise Architect:"})," Defines organizational architecture strategy and ensures system integration."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Program Management Office (PMO):"})," Manages metrics, performance, and process compliance."]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"art-level",children:"ART Level"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Product Manager:"})," Defines and prioritizes features in the ART backlog."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"System Architect:"})," Ensures the architectural integrity and technical foundation."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Release Train Engineer (RTE):"})," Coordinates ART activities, resolves impediments, and facilitates ART ceremonies."]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"team-level",children:"Team Level"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Product Owner:"})," Prioritizes and manages the team backlog."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Scrum Master/Team Coach:"})," Ensures agile practices, facilitates ceremonies, and removes impediments."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Developers and Testers:"})," Collaboratively work on user stories to deliver incremental value."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsx)(i.p,{children:"SAFe provides a comprehensive framework to scale agile practices across large enterprises, ensuring alignment, collaboration, and efficiency from the portfolio level down to individual agile teams. By implementing SAFe, organizations can deliver high-quality solutions that meet customer needs and business objectives effectively."})]})}function h(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>t,x:()=>a});var s=n(96540);const r={},l=s.createContext(r);function t(e){const i=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(l.Provider,{value:i},e.children)}}}]);