"use strict";(self.webpackChunkvns=self.webpackChunkvns||[]).push([[24672],{80295:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"UDS/services/IO-Control","title":"I/O Control - 0x2F","description":"The I/O Control (0x2F) service is an important diagnostic service in the Unified Diagnostic Services (UDS) protocol (ISO 14229). It provides a mechanism for controlling and configuring I/O (Input/Output) operations within the ECU (Electronic Control Unit) during diagnostic sessions. This service is versatile and can be used for a wide range of diagnostic tasks, including controlling actuators, reading sensor data, and managing ECU resources.","source":"@site/docs/UDS/02_services/17_IO-Control.md","sourceDirName":"UDS/02_services","slug":"/UDS/services/IO-Control","permalink":"/Vehicle-Network-Standards/docs/UDS/services/IO-Control","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/UDS/02_services/17_IO-Control.md","tags":[],"version":"current","sidebarPosition":17,"frontMatter":{"sidebar_position":17},"sidebar":"udsSidebar","previous":{"title":"Request Transfer Exit - 0x37","permalink":"/Vehicle-Network-Standards/docs/UDS/services/Request-Transfer-Exit"},"next":{"title":"DTC","permalink":"/Vehicle-Network-Standards/docs/category/dtc"}}');var t=s(74848),i=s(28453);const o={sidebar_position:17},c="I/O Control - 0x2F",d={},l=[{value:"<strong>Purpose and Use Cases</strong>",id:"purpose-and-use-cases",level:2},{value:"<strong>Overview of the I/O Control (0x2F) Service</strong>",id:"overview-of-the-io-control-0x2f-service",level:2},{value:"<strong>Request Frame Format for I/O Control (0x2F)</strong>",id:"request-frame-format-for-io-control-0x2f",level:2},{value:"<strong>Control Function Details</strong>",id:"control-function-details",level:3},{value:"<strong>Response Frame Format for I/O Control (0x2F)</strong>",id:"response-frame-format-for-io-control-0x2f",level:2},{value:"<strong>Positive Response</strong>",id:"positive-response",level:3},{value:"<strong>Negative Response</strong>",id:"negative-response",level:3},{value:"<strong>Supported Negative Response Codes (NRC)</strong>",id:"supported-negative-response-codes-nrc",level:3},{value:"<strong>I/O Control Process</strong>",id:"io-control-process",level:2},{value:"<strong>Conclusion</strong>",id:"conclusion",level:2}];function a(e){const n={h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"io-control---0x2f",children:"I/O Control - 0x2F"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"I/O Control (0x2F)"})," service is an important diagnostic service in the ",(0,t.jsx)(n.strong,{children:"Unified Diagnostic Services (UDS)"})," protocol (ISO 14229). It provides a mechanism for controlling and configuring I/O (Input/Output) operations within the ECU (Electronic Control Unit) during diagnostic sessions. This service is versatile and can be used for a wide range of diagnostic tasks, including controlling actuators, reading sensor data, and managing ECU resources."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"I/O Control"})," service is particularly useful for testing and calibrating components within the vehicle, such as actuators, sensors, and communication interfaces. It allows the client (e.g., a diagnostic tool) to interact directly with the ECU to perform specific I/O operations."]}),"\n",(0,t.jsx)(n.h2,{id:"purpose-and-use-cases",children:(0,t.jsx)(n.strong,{children:"Purpose and Use Cases"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"I/O Control (0x2F)"})," service is used in various diagnostic and service scenarios, including but not limited to:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Actuator Control"}),": Activating or controlling specific actuators (e.g., fuel injectors, relays, motors) within the ECU for testing, calibration, or diagnostics."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Sensor Data Acquisition"}),": Requesting real-time sensor data from the ECU, such as temperature, pressure, speed, or other sensor values that the ECU reads."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Streaming"}),": Continuous data streaming or reading from sensors or other ECU components for diagnostics or performance monitoring."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test Mode Activation"}),": Putting specific vehicle components or subsystems into test modes to perform functional testing, diagnostic checks, or system calibrations."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Configuring I/O Channels"}),": Configuring various I/O channels within the ECU, such as enabling/disabling inputs or outputs, adjusting communication parameters, or setting thresholds for triggering actions."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"I/O Control"})," service is critical for testing and calibration applications, and it allows the client to directly interact with the ECU to modify or read I/O data, offering fine-grained control over the system's behavior."]}),"\n",(0,t.jsx)(n.h2,{id:"overview-of-the-io-control-0x2f-service",children:(0,t.jsx)(n.strong,{children:"Overview of the I/O Control (0x2F) Service"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"I/O Control (0x2F)"})," service provides a way for the client to request specific actions from the ECU's I/O channels. The service can be used to activate outputs (such as turning on a motor or switching a relay), read inputs (like sensor values), or configure I/O settings (e.g., setting parameters for a communication interface or a test mode). The request frame for the ",(0,t.jsx)(n.strong,{children:"I/O Control"})," service includes parameters to specify the type of I/O operation, and the ECU responds with the requested data or an acknowledgment of the action taken."]}),"\n",(0,t.jsxs)(n.p,{children:["The service is generally implemented using a flexible, parameterized structure that allows for various diagnostic functions. The operation depends on the requested ",(0,t.jsx)(n.strong,{children:"IO Control Function"}),", which could range from reading a specific sensor value to activating a certain vehicle subsystem for testing."]}),"\n",(0,t.jsx)(n.h2,{id:"request-frame-format-for-io-control-0x2f",children:(0,t.jsx)(n.strong,{children:"Request Frame Format for I/O Control (0x2F)"})}),"\n",(0,t.jsxs)(n.p,{children:["The request frame for the ",(0,t.jsx)(n.strong,{children:"I/O Control (0x2F)"})," service consists of several parameters that define the operation to be performed and any additional data required by the ECU. Below is the detailed breakdown of the frame format:"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Byte Number"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Parameter Name"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Description"})})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"1"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"SID (Service Identifier)"})}),(0,t.jsxs)(n.td,{children:["The ",(0,t.jsx)(n.strong,{children:"Service Identifier"})," for the ",(0,t.jsx)(n.strong,{children:"I/O Control"})," service, which is always ",(0,t.jsx)(n.strong,{children:"0x2F"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"2"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Control Function"})}),(0,t.jsx)(n.td,{children:"A 1-byte value specifying the type of I/O operation to perform. This could be activating an output, reading an input, or configuring a setting."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"3\u20134"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Data Length"})}),(0,t.jsxs)(n.td,{children:["A 2-byte field indicating the length of the data or parameters related to the ",(0,t.jsx)(n.strong,{children:"Control Function"})," (if applicable)."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"5+"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Data or Parameters"})}),(0,t.jsxs)(n.td,{children:["Variable-length data field containing the necessary parameters for the ",(0,t.jsx)(n.strong,{children:"Control Function"}),". This could be the specific command or data to interact with the I/O channel."]})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"control-function-details",children:(0,t.jsx)(n.strong,{children:"Control Function Details"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"Control Function"})," parameter defines the type of I/O operation to be performed. Some common control functions include:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Activate/Deactivate Outputs"}),": Activating or deactivating specific actuators or relays."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Read Sensor Data"}),": Reading the current value from a sensor."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Set Thresholds"}),": Configuring thresholds for I/O operations (e.g., setting a temperature threshold)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test Mode"}),": Putting a system or component into a test mode to perform diagnostics."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Configure I/O Channel"}),": Adjusting the configuration of specific I/O channels, such as communication interfaces or sensor input ranges."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Each ",(0,t.jsx)(n.strong,{children:"Control Function"})," will have its own specific data format and requirements, depending on the action to be performed."]}),"\n",(0,t.jsx)(n.h2,{id:"response-frame-format-for-io-control-0x2f",children:(0,t.jsx)(n.strong,{children:"Response Frame Format for I/O Control (0x2F)"})}),"\n",(0,t.jsxs)(n.p,{children:["The ECU will respond to the ",(0,t.jsx)(n.strong,{children:"I/O Control (0x2F)"})," request with either a ",(0,t.jsx)(n.strong,{children:"positive"})," or ",(0,t.jsx)(n.strong,{children:"negative"})," response. The response will depend on whether the operation was successfully completed or if any errors were encountered."]}),"\n",(0,t.jsx)(n.h3,{id:"positive-response",children:(0,t.jsx)(n.strong,{children:"Positive Response"})}),"\n",(0,t.jsxs)(n.p,{children:["If the ",(0,t.jsx)(n.strong,{children:"I/O Control (0x2F)"})," request was successfully executed by the ECU, the ECU will send a ",(0,t.jsx)(n.strong,{children:"positive response"})," containing the following frame format:"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Byte Number"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Parameter Name"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Description"})})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"1"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"PCI Length"})}),(0,t.jsx)(n.td,{children:"Specifies the length of the response frame."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"2"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Response SID"})}),(0,t.jsxs)(n.td,{children:["The ",(0,t.jsx)(n.strong,{children:"Service Identifier"})," for the ",(0,t.jsx)(n.strong,{children:"I/O Control"})," response, which is always ",(0,t.jsx)(n.strong,{children:"0x6F"})," (0x2F + 0x40)."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"3"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Control Function"})}),(0,t.jsxs)(n.td,{children:["Echoes the ",(0,t.jsx)(n.strong,{children:"Control Function"})," from the request frame, indicating the type of I/O operation that was performed."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"4"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Response Data"})}),(0,t.jsx)(n.td,{children:"Variable-length field containing any data returned by the ECU (e.g., sensor values, confirmation of action taken)."})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"Response Data"})," field may contain results such as the read value from a sensor or a confirmation message that the output has been activated successfully."]}),"\n",(0,t.jsx)(n.h3,{id:"negative-response",children:(0,t.jsx)(n.strong,{children:"Negative Response"})}),"\n",(0,t.jsxs)(n.p,{children:["If the ECU cannot process the ",(0,t.jsx)(n.strong,{children:"I/O Control (0x2F)"})," request due to invalid parameters, permissions issues, or other reasons, it will send a ",(0,t.jsx)(n.strong,{children:"negative response"})," with the ",(0,t.jsx)(n.strong,{children:"Negative Response Code (NRC)"}),". This typically indicates why the I/O operation could not be completed."]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Byte Number"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Parameter Name"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Description"})})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"1"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"PCI Length"})}),(0,t.jsx)(n.td,{children:"Specifies the length of the response frame."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"2"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Request SID"})}),(0,t.jsxs)(n.td,{children:["The ",(0,t.jsx)(n.strong,{children:"Service Identifier"})," for the ",(0,t.jsx)(n.strong,{children:"I/O Control"})," request, which is always ",(0,t.jsx)(n.strong,{children:"0x2F"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"3"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"NRC"})}),(0,t.jsxs)(n.td,{children:["The ",(0,t.jsx)(n.strong,{children:"Negative Response Code (NRC)"})," indicating why the request was rejected."]})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"supported-negative-response-codes-nrc",children:(0,t.jsx)(n.strong,{children:"Supported Negative Response Codes (NRC)"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"NRC Value"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Description"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Mnemonic"})})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"0x13"})}),(0,t.jsx)(n.td,{children:"Incorrect message length or invalid format"}),(0,t.jsx)(n.td,{children:"IML"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"0x22"})}),(0,t.jsx)(n.td,{children:"Conditions not correct (e.g., invalid parameters, I/O channel unavailable)"}),(0,t.jsx)(n.td,{children:"CNC"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"0x31"})}),(0,t.jsx)(n.td,{children:"Request out of range (e.g., invalid I/O channel or control function)"}),(0,t.jsx)(n.td,{children:"ROOR"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"0x33"})}),(0,t.jsx)(n.td,{children:"Security access denied (e.g., permission issues)"}),(0,t.jsx)(n.td,{children:"SAD"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"0x70"})}),(0,t.jsx)(n.td,{children:"General programming failure (e.g., failure to execute the requested I/O operation)"}),(0,t.jsx)(n.td,{children:"GPF"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"io-control-process",children:(0,t.jsx)(n.strong,{children:"I/O Control Process"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Initiating the Request"}),": The client sends a ",(0,t.jsx)(n.strong,{children:"Request I/O Control (0x2F)"})," request frame, specifying the desired ",(0,t.jsx)(n.strong,{children:"Control Function"})," and any necessary parameters (e.g., I/O channel, sensor type, or threshold values)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Server (ECU) Validation"}),": Upon receiving the request, the ECU validates the ",(0,t.jsx)(n.strong,{children:"Control Function"})," and checks if the requested I/O operation can be executed. If there are any issues (e.g., invalid parameters, insufficient permissions), the ECU sends a ",(0,t.jsx)(n.strong,{children:"negative response"})," with an appropriate ",(0,t.jsx)(n.strong,{children:"NRC"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"I/O Operation Execution"}),": If the request is valid, the ECU performs the requested I/O operation (e.g., activating an actuator, reading a sensor, or adjusting a configuration). If necessary, the ECU may return data to the client in the ",(0,t.jsx)(n.strong,{children:"Response Data"})," field of the response frame."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Completion"}),": After completing the operation, the ECU sends a ",(0,t.jsx)(n.strong,{children:"positive response"})," confirming the action. If the operation was successful, the client can proceed with any further operations or diagnostics. If there was an error, the ECU returns a ",(0,t.jsx)(n.strong,{children:"negative response"})," with the ",(0,t.jsx)(n.strong,{children:"NRC"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:(0,t.jsx)(n.strong,{children:"Conclusion"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"I/O Control (0x2F)"})," service is a powerful and flexible diagnostic tool in the UDS protocol, allowing the client to interact with the ECU\u2019s I/O channels to perform various actions such as reading sensors, activating actuators, and configuring system parameters. It is essential for a wide range of diagnostic and service tasks, including testing, calibration, and configuration of vehicle components."]}),"\n",(0,t.jsxs)(n.p,{children:["By providing fine-grained control over I/O operations, the ",(0,t.jsx)(n.strong,{children:"I/O Control"})," service enables precise testing and diagnostics, making it a critical service for both OEMs and service centers involved in automotive maintenance and diagnostics. Proper error handling through the ",(0,t.jsx)(n.strong,{children:"NRCs"})," ensures that the system remains robust, even when"]}),"\n",(0,t.jsx)(n.p,{children:"issues arise during I/O operations."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var r=s(96540);const t={},i=r.createContext(t);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);