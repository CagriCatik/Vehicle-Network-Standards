"use strict";(self.webpackChunkvns=self.webpackChunkvns||[]).push([[49162],{83164:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"AUTOSAR/rte/rte_runnables","title":"RTE as Runtime Environment for Runnables","description":"The Runtime Environment (RTE) is the middleware layer in AUTOSAR that ensures seamless interaction between Software Components (SWCs), the Operating System (OS), and the Basic Software (BSW). Its primary role is to manage Runnables\u2014the smallest executable units in AUTOSAR\u2014by triggering them based on predefined events and facilitating communication between SWCs.","source":"@site/docs/AUTOSAR/03_rte/03_rte_runnables.md","sourceDirName":"AUTOSAR/03_rte","slug":"/AUTOSAR/rte/rte_runnables","permalink":"/Vehicle-Network-Standards/docs/AUTOSAR/rte/rte_runnables","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/AUTOSAR/03_rte/03_rte_runnables.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"autosarSidebar","previous":{"title":"Layered Framework Overview","permalink":"/Vehicle-Network-Standards/docs/AUTOSAR/rte/architecture"},"next":{"title":"RTE as a Communication Interface","permalink":"/Vehicle-Network-Standards/docs/AUTOSAR/rte/rte_com_interface"}}');var r=s(74848),t=s(28453);const l={},d="RTE as Runtime Environment for Runnables",a={},o=[{value:"<strong>1. RTE Overview</strong>",id:"1-rte-overview",level:2},{value:"<strong>Key Characteristics:</strong>",id:"key-characteristics",level:3},{value:"<strong>2. Mapping and Execution of Runnables</strong>",id:"2-mapping-and-execution-of-runnables",level:2},{value:"<strong>2.1 Mapping Runnables to OS Tasks</strong>",id:"21-mapping-runnables-to-os-tasks",level:3},{value:"Example: Dimmer SWC",id:"example-dimmer-swc",level:4},{value:"<strong>2.2 RTE Event Triggers</strong>",id:"22-rte-event-triggers",level:3},{value:"Example Workflow:",id:"example-workflow",level:4},{value:"<strong>3. Communication Through RTE</strong>",id:"3-communication-through-rte",level:2},{value:"<strong>3.1 Sender/Receiver Communication</strong>",id:"31-senderreceiver-communication",level:3},{value:"Example:",id:"example",level:4},{value:"<strong>3.2 Client/Server Communication</strong>",id:"32-clientserver-communication",level:3},{value:"Example:",id:"example-1",level:4},{value:"<strong>4. RTE Customization</strong>",id:"4-rte-customization",level:2},{value:"Key Considerations:",id:"key-considerations",level:3},{value:"<strong>5. RTE Code Generation</strong>",id:"5-rte-code-generation",level:2},{value:"Example Code:",id:"example-code",level:4},{value:"<strong>6. Key Benefits of the RTE</strong>",id:"6-key-benefits-of-the-rte",level:2},{value:"<strong>7. Use Case: Interior Lighting System</strong>",id:"7-use-case-interior-lighting-system",level:2},{value:"<strong>Workflow</strong>",id:"workflow",level:3},{value:"<strong>8. Summary</strong>",id:"8-summary",level:2},{value:"<strong>Key Takeaways</strong>:",id:"key-takeaways",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"rte-as-runtime-environment-for-runnables",children:"RTE as Runtime Environment for Runnables"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Runtime Environment (RTE)"})," is the middleware layer in AUTOSAR that ensures seamless interaction between Software Components (SWCs), the Operating System (OS), and the Basic Software (BSW). Its primary role is to manage ",(0,r.jsx)(n.strong,{children:"Runnables"}),"\u2014the smallest executable units in AUTOSAR\u2014by triggering them based on predefined events and facilitating communication between SWCs."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1-rte-overview",children:(0,r.jsx)(n.strong,{children:"1. RTE Overview"})}),"\n",(0,r.jsx)(n.h3,{id:"key-characteristics",children:(0,r.jsx)(n.strong,{children:"Key Characteristics:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Configurable Middleware"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Maps Runnables to OS tasks during configuration."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Event-Based Execution"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Triggers Runnables using predefined RTE events."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Task Configuration"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Defines task priorities, alarms, and scheduling mechanisms for efficient execution."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Customizable"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Each ECU has a unique RTE tailored to the SWCs it hosts."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"2-mapping-and-execution-of-runnables",children:(0,r.jsx)(n.strong,{children:"2. Mapping and Execution of Runnables"})}),"\n",(0,r.jsx)(n.h3,{id:"21-mapping-runnables-to-os-tasks",children:(0,r.jsx)(n.strong,{children:"2.1 Mapping Runnables to OS Tasks"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"During system design, RTE maps each Runnable to an OS task."}),"\n",(0,r.jsx)(n.li,{children:"Tasks are configured based on priority, frequency, and triggering events."}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"example-dimmer-swc",children:"Example: Dimmer SWC"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Runnables"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"AP_Init"}),": Initializes the dimmer system at startup."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"AP_Dim"}),": Adjusts brightness based on external signals (e.g., ",(0,r.jsx)(n.code,{children:"Contact"}),")."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mapping"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"AP_Init"}),": Mapped to an initialization task."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"AP_Dim"}),": Mapped to an event-based task triggered by the ",(0,r.jsx)(n.code,{children:"Contact"})," signal."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"22-rte-event-triggers",children:(0,r.jsx)(n.strong,{children:"2.2 RTE Event Triggers"})}),"\n",(0,r.jsx)(n.p,{children:"Runnables are triggered by specific events defined in the RTE configuration. The table below summarizes common events:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Event"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Description"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Example Use Case"})})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Init"})}),(0,r.jsx)(n.td,{children:"Triggered during system initialization."}),(0,r.jsxs)(n.td,{children:["SWC initialization (e.g., ",(0,r.jsx)(n.code,{children:"AP_Init"}),")."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"TimingEvent"})}),(0,r.jsx)(n.td,{children:"Periodic trigger based on a timer."}),(0,r.jsx)(n.td,{children:"Sensor data processing every 20ms."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"DataReceivedEvent"})," (S/R)"]}),(0,r.jsx)(n.td,{children:"Triggered when new data is received."}),(0,r.jsxs)(n.td,{children:["Adjusting brightness based on ",(0,r.jsx)(n.code,{children:"Contact"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"DataReceiveErrorEvent"})," (S/R)"]}),(0,r.jsx)(n.td,{children:"Triggered on data reception failure."}),(0,r.jsx)(n.td,{children:"Diagnostic monitoring."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"OperationInvokedEvent"})," (C/S)"]}),(0,r.jsx)(n.td,{children:"Triggered when a server operation is called."}),(0,r.jsx)(n.td,{children:"Handling diagnostic service requests."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"ModeSwitchEvent"})}),(0,r.jsx)(n.td,{children:"Triggered when a mode switch occurs."}),(0,r.jsx)(n.td,{children:"Switching between normal and diagnostic mode."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"example-workflow",children:"Example Workflow:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.code,{children:"Contact"})," signal is received by the RTE."]}),"\n",(0,r.jsxs)(n.li,{children:["The RTE triggers the ",(0,r.jsx)(n.code,{children:"AP_Dim"})," Runnable in the Dimmer SWC."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"3-communication-through-rte",children:(0,r.jsx)(n.strong,{children:"3. Communication Through RTE"})}),"\n",(0,r.jsxs)(n.p,{children:["The RTE enables communication between SWCs and between SWCs and the underlying OS/BSW. This is achieved through ",(0,r.jsx)(n.strong,{children:"Sender/Receiver (S/R)"})," and ",(0,r.jsx)(n.strong,{children:"Client/Server (C/S)"})," communication paradigms."]}),"\n",(0,r.jsx)(n.h3,{id:"31-senderreceiver-communication",children:(0,r.jsx)(n.strong,{children:"3.1 Sender/Receiver Communication"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"SWCs exchange data through ports managed by the RTE."}),"\n",(0,r.jsx)(n.li,{children:"Data flow is event-based or periodic."}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"example",children:"Example:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A sensor SWC sends the ",(0,r.jsx)(n.code,{children:"DoorOpen"})," signal:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"Rte_Write_Sensor_DoorOpen(doorState);\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["An actuator SWC reads the signal:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"Rte_Read_Actuator_DoorOpen(&doorState);\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"32-clientserver-communication",children:(0,r.jsx)(n.strong,{children:"3.2 Client/Server Communication"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"SWCs invoke operations or services provided by other components."}),"\n",(0,r.jsx)(n.li,{children:"Suitable for complex interactions, such as diagnostics."}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"example-1",children:"Example:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A client SWC calls a diagnostic operation:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"Rte_Call_DiagnosticService_ReadData(&diagnosticData);\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"4-rte-customization",children:(0,r.jsx)(n.strong,{children:"4. RTE Customization"})}),"\n",(0,r.jsx)(n.h3,{id:"key-considerations",children:"Key Considerations:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ECU-Specific Configuration"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Each ECU has a unique RTE reflecting its SWCs and system role."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Task Configuration"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Defines task priorities and scheduling for Runnables."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Event Mapping"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Associates Runnables with events to ensure correct triggering."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"5-rte-code-generation",children:(0,r.jsx)(n.strong,{children:"5. RTE Code Generation"})}),"\n",(0,r.jsx)(n.p,{children:"The RTE generates executable code for each ECU based on the system configuration. This includes:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Task Routines"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Code to execute Runnables."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Event Handlers"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Logic to trigger Runnables based on events."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Communication Interfaces"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Code to manage data exchange through ports."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"example-code",children:"Example Code:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"void Rte_Task_Dimmer(void) {\n    // Periodic task to trigger the Dimmer SWC's Runnable\n    AP_Dim();\n}\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"6-key-benefits-of-the-rte",children:(0,r.jsx)(n.strong,{children:"6. Key Benefits of the RTE"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hardware Abstraction"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"SWCs remain independent of underlying hardware."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scalability"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Supports simple and complex systems with multiple ECUs."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Interoperability"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Standardized communication between SWCs."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Deterministic Behavior"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ensures predictable execution of critical tasks."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"7-use-case-interior-lighting-system",children:(0,r.jsx)(n.strong,{children:"7. Use Case: Interior Lighting System"})}),"\n",(0,r.jsx)(n.h3,{id:"workflow",children:(0,r.jsx)(n.strong,{children:"Workflow"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SWC1"}),": Monitors door state and sends a ",(0,r.jsx)(n.code,{children:"Contact"})," signal."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SWC2 (Dimmer)"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Runnable ",(0,r.jsx)(n.code,{children:"AP_Init"})," initializes the dimmer system at startup."]}),"\n",(0,r.jsxs)(n.li,{children:["Runnable ",(0,r.jsx)(n.code,{children:"AP_Dim"})," adjusts brightness based on the ",(0,r.jsx)(n.code,{children:"Contact"})," signal."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"RTE"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Routes the ",(0,r.jsx)(n.code,{children:"Contact"})," signal from SWC1 to SWC2."]}),"\n",(0,r.jsxs)(n.li,{children:["Maps and schedules the execution of ",(0,r.jsx)(n.code,{children:"AP_Init"})," and ",(0,r.jsx)(n.code,{children:"AP_Dim"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"8-summary",children:(0,r.jsx)(n.strong,{children:"8. Summary"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"RTE"})," in AUTOSAR provides a robust framework for managing Runnables, facilitating communication, and abstracting hardware dependencies. By using event-based triggers and configurable tasks, the RTE ensures modular, scalable, and efficient execution of automotive software systems."]}),"\n",(0,r.jsxs)(n.h3,{id:"key-takeaways",children:[(0,r.jsx)(n.strong,{children:"Key Takeaways"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The RTE maps Runnables to OS tasks and defines their triggers."}),"\n",(0,r.jsxs)(n.li,{children:["It supports both ",(0,r.jsx)(n.strong,{children:"Sender/Receiver"})," and ",(0,r.jsx)(n.strong,{children:"Client/Server"})," communication."]}),"\n",(0,r.jsx)(n.li,{children:"Each ECU has a customized RTE tailored to its SWCs."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>d});var i=s(96540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);