"use strict";(self.webpackChunkvns=self.webpackChunkvns||[]).push([[6741],{11949:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"UDS/faq/0x_otx","title":"**OTX (Open Test sequence eXchange)**","description":"Definition:","source":"@site/docs/UDS/05_faq/0x_otx.md","sourceDirName":"UDS/05_faq","slug":"/UDS/faq/0x_otx","permalink":"/Vehicle-Network-Standards/docs/UDS/faq/0x_otx","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/UDS/05_faq/0x_otx.md","tags":[],"version":"current","frontMatter":{},"sidebar":"udsSidebar","previous":{"title":"Logical Link","permalink":"/Vehicle-Network-Standards/docs/UDS/faq/0x_logical_link"},"next":{"title":"0x_otx_process","permalink":"/Vehicle-Network-Standards/docs/UDS/faq/0x_otx_process"}}');var r=s(74848),t=s(28453);const o={},c="OTX (Open Test sequence eXchange)",l={},a=[];function d(n){const e={br:"br",h1:"h1",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"otx-open-test-sequence-exchange",children:(0,r.jsx)(e.strong,{children:"OTX (Open Test sequence eXchange)"})})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Definition"}),":",(0,r.jsx)(e.br,{}),"\n","OTX is an international standard (ISO 13209) for describing and exchanging diagnostic test sequences in the automotive domain. It provides a structured and vendor-independent way to define workflows and test sequences, making it a powerful tool for managing diagnostic processes based on ",(0,r.jsx)(e.strong,{children:"UDS (Unified Diagnostic Services)"}),"."]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Key Features of OTX in UDS Diagnostics"}),":"]}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Standardized Workflow Description"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"OTX provides a formal way to document diagnostic sequences, such as reading diagnostic trouble codes (DTCs), performing ECU resets, or executing end-of-line (EoL) tests."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Interoperability"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"By adhering to ISO 13209, OTX ensures compatibility across different diagnostic tools and software platforms, enabling seamless integration in complex diagnostic environments."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Visual Representation"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"OTX allows test sequences to be visually represented, making them easier to understand, debug, and communicate."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"XML-based Format"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"OTX sequences are described in an XML format, which is both machine-readable and human-readable. This ensures the sequences are easy to parse, modify, and share across teams and tools."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Support for UDS Functions"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"OTX can encapsulate UDS diagnostic services (e.g., Read Data by Identifier [0x22], Clear Diagnostic Information [0x14]) as part of test workflows."}),"\n",(0,r.jsx)(e.li,{children:"It can sequence multiple UDS services into a coherent test procedure, including conditional logic and error handling."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Structure of OTX Documents"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Global Definitions"}),": Shared data and parameters used across multiple sequences."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Procedures"}),": Individual diagnostic workflows or test steps."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Variables and Parameters"}),": Inputs, outputs, and intermediate values used in test sequences."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Logic"}),": Conditional statements, loops, and error-handling routines that control the sequence flow."]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Applications in UDS Diagnostics"}),":"]}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"EoL Testing"}),":","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Automating complex sequences for ECU testing during manufacturing."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Diagnostic Routine Execution"}),":","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Defining step-by-step procedures for running diagnostic routines like actuator tests or system resets."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Service Validation"}),":","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Validating that UDS services respond correctly and meet requirements."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Automated Testing"}),":","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Enabling automated regression tests for software updates in ECUs."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Fault Injection Testing"}),":","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Testing ECU robustness by simulating specific failure conditions and analyzing responses."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Advantages"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Consistency"}),": Ensures all test engineers and systems use a standardized sequence format."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Traceability"}),": Clear documentation of test logic and procedures improves debugging and compliance."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Scalability"}),": Facilitates the reuse and modification of sequences for different ECUs or vehicle platforms."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Tool Support"}),": Widely supported by automotive diagnostic tools such as ",(0,r.jsx)(e.strong,{children:"Vector vTESTstudio"}),", ",(0,r.jsx)(e.strong,{children:"ETAS ODX/OTX Studio"}),", and others."]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Example Use Case"}),":\nA typical OTX workflow for a UDS diagnostic session might include:"]}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Establishing communication with an ECU (e.g., tester presents a diagnostic session request using Service 0x10)."}),"\n",(0,r.jsx)(e.li,{children:"Reading specific data (e.g., VIN using Service 0x22)."}),"\n",(0,r.jsx)(e.li,{children:"Running a diagnostic routine (e.g., Service 0x31 to control actuators)."}),"\n",(0,r.jsx)(e.li,{children:"Logging the responses."}),"\n",(0,r.jsx)(e.li,{children:"Handling errors or retries if the ECU does not respond as expected."}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},28453:(n,e,s)=>{s.d(e,{R:()=>o,x:()=>c});var i=s(96540);const r={},t=i.createContext(r);function o(n){const e=i.useContext(t);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),i.createElement(t.Provider,{value:e},n.children)}}}]);