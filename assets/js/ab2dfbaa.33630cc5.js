"use strict";(self.webpackChunkvns=self.webpackChunkvns||[]).push([[96086],{34532:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"SOVA/core-concepts-soa/zielbild","title":"Zielbild einer serviceorientierten Fahrzeugarchitektur","description":"In der angestrebten Service-Orientierten Fahrzeugarchitektur (SOA) nehmen sowohl service-orientierte","source":"@site/docs/SOVA/03_core-concepts-soa/04_zielbild.md","sourceDirName":"SOVA/03_core-concepts-soa","slug":"/SOVA/core-concepts-soa/zielbild","permalink":"/Vehicle-Network-Standards/docs/SOVA/core-concepts-soa/zielbild","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/SOVA/03_core-concepts-soa/04_zielbild.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"sovaSidebar","previous":{"title":"Anwendungsf\xe4lle f\xfcr die Service-orientierte Fahrzeugarchitektur","permalink":"/Vehicle-Network-Standards/docs/SOVA/core-concepts-soa/use_cases"},"next":{"title":"Onboard-Fahrzeug-API","permalink":"/Vehicle-Network-Standards/docs/SOVA/core-concepts-soa/onboard_api"}}');var t=r(74848),s=r(28453);const a={},c="Zielbild einer serviceorientierten Fahrzeugarchitektur",o={},d=[];function u(e){const n={h1:"h1",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"zielbild-einer-serviceorientierten-fahrzeugarchitektur",children:"Zielbild einer serviceorientierten Fahrzeugarchitektur"})}),"\n",(0,t.jsx)(n.p,{children:"In der angestrebten Service-Orientierten Fahrzeugarchitektur (SOA) nehmen sowohl service-orientierte\nKommunikation auf dem Ethernet als auch signalbasierte Kommunikation auf mechatronischer Ebene eine\nzentrale Rolle ein. Diese hybride SOA-Architektur erm\xf6glicht eine effiziente Vernetzung von Fahrzeugfunktionen\nund -Daten, wobei eine entscheidende Abstraktionsschicht durch die Onboard Vehicle API geschaffen wird."}),"\n",(0,t.jsx)(n.p,{children:"Die Onboard Vehicle API fungiert als eine standardisierte Schnittstelle, die den Zugang zu verschiedenen\nFahrzeugfunktionen und -Daten \xfcber sorgf\xe4ltig konzipierte Services erleichtert. Es ist von besonderer Bedeutung zu\nbeachten, dass die Onboard Vehicle API ausschlie\xdflich im Ethernet-Backbone existiert. Dies resultiert aus der\nTatsache, dass SOME/IP eine Technologie des Ethernet-Stacks ist und dementsprechend auf dieser Infrastruktur\nbasiert."}),"\n",(0,t.jsx)(n.p,{children:"Dennoch wird durch die Funktionsarchitektur und die entscheidende Rolle der Service Provider ein innovatives\nKonzept in unserer Architektur umgesetzt. Mithilfe des Schl\xfcsselelements der Service Providers ist es m\xf6glich,\nServices mit einer Schnittstelle auf der Onboard Vehicle API auch f\xfcr Systeme und Funktionen bereitzustellen, die\nauf LIN/CAN oder FlexRay Steuerger\xe4ten lokalisiert sind. Dieses Konzept bildet das zentrale Design unserer\nArchitektur."}),"\n",(0,t.jsx)(n.p,{children:"Unser vorrangiges Ziel ist es, SOME/IP Services mit einer Schnittstelle auf der Onboard Vehicle API f\xfcr eine\nm\xf6glichst breite Palette von Systemen und Funktionen verf\xfcgbar zu machen. Mit anderen Worten, wir streben\ndanach, Services zu entwerfen und zu implementieren, wo immer dies technisch realisierbar ist."}),"\n",(0,t.jsx)(n.p,{children:"Diese Herangehensweise ist entscheidend f\xfcr die Schaffung einer flexiblen und service-orientierten\nFahrzeugarchitektur, die den Anforderungen an Vernetzung, Datenaustausch und Funktionalit\xe4t in modernen\nFahrzeugen gerecht wird. Sie erm\xf6glicht eine nahtlose Integration und Kommunikation von Systemen auf\nverschiedenen Ebenen der Fahrzeugarchitektur und tr\xe4gt somit zur Realisierung innovativer und zukunftsf\xe4higer\nFahrzeugkonzepte bei"})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>c});var i=r(96540);const t={},s=i.createContext(t);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);