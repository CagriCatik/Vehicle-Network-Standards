"use strict";(self.webpackChunkvns=self.webpackChunkvns||[]).push([[56746],{59087:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"GLOSSARY/N","title":"N","description":"NRZ","source":"@site/docs/GLOSSARY/N.md","sourceDirName":"GLOSSARY","slug":"/GLOSSARY/N","permalink":"/Vehicle-Network-Standards/docs/GLOSSARY/N","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/GLOSSARY/N.md","tags":[],"version":"current","frontMatter":{},"sidebar":"glossarySidebar","previous":{"title":"M","permalink":"/Vehicle-Network-Standards/docs/GLOSSARY/M"},"next":{"title":"O","permalink":"/Vehicle-Network-Standards/docs/GLOSSARY/O"}}');var i=t(74848),s=t(28453);const o={},d="N",a={},u=[{value:"NRZ",id:"nrz",level:2}];function c(e){const n={h1:"h1",h2:"h2",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"n",children:"N"})}),"\n",(0,i.jsx)(n.h2,{id:"nrz",children:"NRZ"}),"\n",(0,i.jsx)(n.p,{children:"Die Non-Return-to-Zero (NRZ)-Codierung ist eine Methode zur Signalisierung von Daten, die im CAN-Bus verwendet wird. Bei der NRZ-Codierung bleibt das Signal auf einem hohen oder niedrigen Pegel f\xfcr die gesamte Dauer eines Datenbits, ohne zwischen den beiden Zust\xe4nden zur\xfcckzukehren. In einem CAN-Bus werden logische Einsen durch einen dominanten Zustand (Low-Pegel) und logische Nullen durch einen rezessiven Zustand (High-Pegel) dargestellt. Die NRZ-Codierung erm\xf6glicht eine einfache Implementierung und eine hohe Signalintegrit\xe4t, da sie keine zus\xe4tzliche Taktsynchronisation erfordert. Sie wird daher h\xe4ufig in CAN-Netzwerken eingesetzt, um eine zuverl\xe4ssige und effiziente Daten\xfcbertragung zu gew\xe4hrleisten."})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var r=t(96540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);