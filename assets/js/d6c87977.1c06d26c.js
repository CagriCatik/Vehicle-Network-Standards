"use strict";(self.webpackChunkvns=self.webpackChunkvns||[]).push([[16466],{19110:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"Agile-SCRUM/SAFe/ART","title":"Agile Release Train","description":"The Agile Release Train (ART) is a critical concept within the Scaled Agile Framework , designed to enhance the coordination and efficiency of agile teams working together on complex projects. This part provides a thorough understanding of the ART, its structure, functionality, and its importance in delivering continuous value in an agile environment.","source":"@site/docs/Agile-SCRUM/09_SAFe/09_ART.md","sourceDirName":"Agile-SCRUM/09_SAFe","slug":"/Agile-SCRUM/SAFe/ART","permalink":"/Vehicle-Network-Standards/docs/Agile-SCRUM/SAFe/ART","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Agile-SCRUM/09_SAFe/09_ART.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{},"sidebar":"agileSidebar","previous":{"title":"Key Areas of Responsibility for Product Managers in SCRUM and SAFe Frameworks","permalink":"/Vehicle-Network-Standards/docs/Agile-SCRUM/SAFe/PM-SAFe"},"next":{"title":"Iteration Level Events in SAFe (Scaled Agile Framework)","permalink":"/Vehicle-Network-Standards/docs/Agile-SCRUM/SAFe/SAFe-Agile-Team-Level-Events"}}');var t=i(74848),s=i(28453);const o={},l="Agile Release Train",r={},c=[{value:"Definition and Structure of Agile Release Train",id:"definition-and-structure-of-agile-release-train",level:2},{value:"Composition of ART",id:"composition-of-art",level:3},{value:"Capabilities of ART",id:"capabilities-of-art",level:3},{value:"Key Concepts in ART",id:"key-concepts-in-art",level:2},{value:"Continuous Value Delivery",id:"continuous-value-delivery",level:3},{value:"Synchronization and Cadence",id:"synchronization-and-cadence",level:3},{value:"Common Mission and Backlog",id:"common-mission-and-backlog",level:3},{value:"Cross-Functional Teams",id:"cross-functional-teams",level:3},{value:"Comparison with Waterfall Approach",id:"comparison-with-waterfall-approach",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"agile-release-train",children:"Agile Release Train"})}),"\n",(0,t.jsx)(n.p,{children:"The Agile Release Train (ART) is a critical concept within the Scaled Agile Framework , designed to enhance the coordination and efficiency of agile teams working together on complex projects. This part provides a thorough understanding of the ART, its structure, functionality, and its importance in delivering continuous value in an agile environment."}),"\n",(0,t.jsx)(n.h2,{id:"definition-and-structure-of-agile-release-train",children:"Definition and Structure of Agile Release Train"}),"\n",(0,t.jsx)(n.p,{children:"An Agile Release Train (ART) is essentially a team of agile teams. It represents a virtual organization that brings together multiple agile teams, typically ranging from 5 to 12 teams, with a total of 50 to 125 individuals. This structure is designed to enable large-scale agile development, where teams work collaboratively towards a common goal, delivering value through a continuous flow of releases."}),"\n",(0,t.jsx)(n.h3,{id:"composition-of-art",children:"Composition of ART"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Teams"}),": Each ART consists of 5 to 12 agile teams."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Size"}),": The total number of individuals in an ART ranges from 50 to 125 people."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Roles"}),": Key roles within an ART include Product Owners, Scrum Masters, developers, and other specialists necessary for delivering the product."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"capabilities-of-art",children:"Capabilities of ART"}),"\n",(0,t.jsx)(n.p,{children:"An ART is endowed with all the capabilities required to define, develop, validate, and release new system functionalities. For example, in the development of a complex product like a Tesla car, an ART would include teams responsible for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Autonomous software"}),"\n",(0,t.jsx)(n.li,{children:"Hardware components (e.g., chassis, radar, steering)"}),"\n",(0,t.jsx)(n.li,{children:"Firmware (software interfacing hardware and software)"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"These teams collaborate closely to ensure that all aspects of the product are integrated seamlessly, tested thoroughly, and deployed effectively."}),"\n",(0,t.jsx)(n.h2,{id:"key-concepts-in-art",children:"Key Concepts in ART"}),"\n",(0,t.jsx)(n.h3,{id:"continuous-value-delivery",children:"Continuous Value Delivery"}),"\n",(0,t.jsx)(n.p,{children:"The primary objective of an ART is to ensure a continuous flow of value to the customer. This involves iteratively releasing new functionalities and features, typically on a bi-weekly basis, but adaptable to market and regulatory demands. This continuous delivery is achieved through:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Iterative development cycles"}),"\n",(0,t.jsx)(n.li,{children:"Regular integration and testing"}),"\n",(0,t.jsx)(n.li,{children:"Frequent deployment of incremental updates"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"synchronization-and-cadence",children:"Synchronization and Cadence"}),"\n",(0,t.jsx)(n.p,{children:"ARTs operate on a synchronized cadence to maintain alignment and coherence among all teams. This synchronization is facilitated through events such as Program Increment  Planning. During PI Planning:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"All members of the ART, typically up to 125 people, come together to plan the work for the next iteration (usually three months)."}),"\n",(0,t.jsx)(n.li,{children:"Teams align their goals and objectives with the overarching mission of the ART."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"common-mission-and-backlog",children:"Common Mission and Backlog"}),"\n",(0,t.jsx)(n.p,{children:"ARTs align to a common mission through a shared backlog. This backlog serves as a repository for all work items, prioritizing tasks and ensuring that efforts are focused on delivering the most valuable features first. The ART backlog typically includes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"User stories"}),"\n",(0,t.jsx)(n.li,{children:"Features"}),"\n",(0,t.jsx)(n.li,{children:"Enablers"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cross-functional-teams",children:"Cross-Functional Teams"}),"\n",(0,t.jsx)(n.p,{children:"ARTs are fully cross-functional, meaning they include all necessary skills and roles to deliver the product from conception to release. This cross-functionality includes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Business analysts"}),"\n",(0,t.jsx)(n.li,{children:"Product managers and owners"}),"\n",(0,t.jsx)(n.li,{children:"Hardware and software engineers"}),"\n",(0,t.jsx)(n.li,{children:"Quality testers"}),"\n",(0,t.jsx)(n.li,{children:"Compliance and security specialists"}),"\n",(0,t.jsx)(n.li,{children:"Operations personnel"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This diverse composition ensures that the ART can address all aspects of product development, reducing dependencies and enhancing collaboration."}),"\n",(0,t.jsx)(n.h2,{id:"comparison-with-waterfall-approach",children:"Comparison with Waterfall Approach"}),"\n",(0,t.jsx)(n.p,{children:"The ART model significantly differs from traditional waterfall methodologies, where teams operate in silos, leading to communication breakdowns and inefficiencies. In a waterfall setup:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Business, product management, hardware, and software teams work independently."}),"\n",(0,t.jsx)(n.li,{children:"Coordination and integration efforts are minimal, resulting in delayed feedback and slower delivery."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"In contrast, the ART approach:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Promotes high levels of communication and collaboration."}),"\n",(0,t.jsx)(n.li,{children:"Integrates all teams into a cohesive unit working towards a shared goal."}),"\n",(0,t.jsx)(n.li,{children:"Ensures continuous delivery of value through iterative development and regular synchronization."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsx)(n.p,{children:"The Agile Release Train (ART) is a powerful mechanism within the Scaled Agile Framework, enabling large organizations to scale agile practices effectively. By bringing together multiple agile teams into a single, synchronized entity, ARTs ensure continuous delivery of value, enhanced collaboration, and efficient integration of complex products. The cross-functional nature and iterative approach of ARTs address the limitations of traditional waterfall methodologies, making them essential for modern agile development."}),"\n",(0,t.jsx)(n.p,{children:"Understanding and implementing ARTs can significantly enhance an organization's ability to deliver high-quality products rapidly and efficiently, ultimately leading to greater customer satisfaction and competitive advantage."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var a=i(96540);const t={},s=a.createContext(t);function o(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);