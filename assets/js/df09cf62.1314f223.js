"use strict";(self.webpackChunkvns=self.webpackChunkvns||[]).push([[13183],{72280:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>l,default:()=>a,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"AUTOSAR/application/components","title":"Components View for Lighting Control","description":"This documentation outlines the Components View for Lighting Control in an AUTOSAR-based application. The diagram illustrates the interaction between software components in an embedded system designed for vehicle lighting management. Each component plays a specific role, and their interconnection enables the overall functionality of the lighting control system.","source":"@site/docs/AUTOSAR/02_application/02_components.md","sourceDirName":"AUTOSAR/02_application","slug":"/AUTOSAR/application/components","permalink":"/Vehicle-Network-Standards/docs/AUTOSAR/application/components","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/AUTOSAR/02_application/02_components.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"autosarSidebar","previous":{"title":"Overview of Software Layers","permalink":"/Vehicle-Network-Standards/docs/AUTOSAR/application/architecture"},"next":{"title":"Virtual Function Bus","permalink":"/Vehicle-Network-Standards/docs/AUTOSAR/application/communication"}}');var s=t(74848),o=t(28453);const r={},l="Components View for Lighting Control",h={},d=[{value:"<strong>1. Overview of the Components</strong>",id:"1-overview-of-the-components",level:2},{value:"<strong>1.1 Right Door and Left Door</strong>",id:"11-right-door-and-left-door",level:3},{value:"Example Use Case:",id:"example-use-case",level:4},{value:"<strong>1.2 Door Contact</strong>",id:"12-door-contact",level:3},{value:"Example Workflow:",id:"example-workflow",level:4},{value:"Code Snippet:",id:"code-snippet",level:4},{value:"<strong>1.3 Switch</strong>",id:"13-switch",level:3},{value:"Use Case:",id:"use-case",level:4},{value:"<strong>1.4 Dimmer</strong>",id:"14-dimmer",level:3},{value:"Key Functions:",id:"key-functions",level:4},{value:"Code Snippet:",id:"code-snippet-1",level:4},{value:"<strong>1.5 Light</strong>",id:"15-light",level:3},{value:"Example:",id:"example",level:4},{value:"<strong>2. Component Interactions</strong>",id:"2-component-interactions",level:2},{value:"<strong>2.1 Signal Flow</strong>",id:"21-signal-flow",level:3},{value:"<strong>3. Functional Overview</strong>",id:"3-functional-overview",level:2},{value:"<strong>3.1 Door-Based Lighting</strong>",id:"31-door-based-lighting",level:3},{value:"Workflow:",id:"workflow",level:4},{value:"<strong>3.2 Manual Lighting Control</strong>",id:"32-manual-lighting-control",level:3},{value:"Workflow:",id:"workflow-1",level:4},{value:"<strong>4. Advanced Considerations</strong>",id:"4-advanced-considerations",level:2},{value:"<strong>4.1 Fault Tolerance</strong>",id:"41-fault-tolerance",level:3},{value:"Code Snippet:",id:"code-snippet-2",level:4},{value:"<strong>4.2 Timing and Delays</strong>",id:"42-timing-and-delays",level:3},{value:"Example:",id:"example-1",level:4},{value:"<strong>5. Benefits of the Component Design</strong>",id:"5-benefits-of-the-component-design",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"components-view-for-lighting-control",children:"Components View for Lighting Control"})}),"\n",(0,s.jsxs)(n.p,{children:["This documentation outlines the ",(0,s.jsx)(n.strong,{children:"Components View for Lighting Control"})," in an AUTOSAR-based application. The diagram illustrates the interaction between software components in an embedded system designed for vehicle lighting management. Each component plays a specific role, and their interconnection enables the overall functionality of the lighting control system."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"1-overview-of-the-components",children:(0,s.jsx)(n.strong,{children:"1. Overview of the Components"})}),"\n",(0,s.jsx)(n.h3,{id:"11-right-door-and-left-door",children:(0,s.jsx)(n.strong,{children:"1.1 Right Door and Left Door"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"These components represent the software abstraction of the vehicle doors."}),"\n",(0,s.jsx)(n.li,{children:"Their primary function is to detect the status of the doors (open or closed)."}),"\n",(0,s.jsxs)(n.li,{children:["Each door component communicates with the ",(0,s.jsx)(n.strong,{children:"Door Contact"})," component to notify the current state."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-use-case",children:"Example Use Case:"}),"\n",(0,s.jsxs)(n.p,{children:["When a door opens, the corresponding component triggers a signal to the ",(0,s.jsx)(n.strong,{children:"Door Contact"})," module, initiating further actions like lighting activation."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"12-door-contact",children:(0,s.jsx)(n.strong,{children:"1.2 Door Contact"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"Door Contact"})," component aggregates signals from both the ",(0,s.jsx)(n.strong,{children:"Right Door"})," and ",(0,s.jsx)(n.strong,{children:"Left Door"})," components."]}),"\n",(0,s.jsx)(n.li,{children:"It acts as a logical gateway, determining whether a door has been opened."}),"\n",(0,s.jsxs)(n.li,{children:["Based on its evaluation, it communicates with the ",(0,s.jsx)(n.strong,{children:"Dimmer"})," and ",(0,s.jsx)(n.strong,{children:"Light"})," components to manage the vehicle's interior or exterior lighting."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-workflow",children:"Example Workflow:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Receives input from the ",(0,s.jsx)(n.strong,{children:"Right Door"})," or ",(0,s.jsx)(n.strong,{children:"Left Door"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Processes the input to determine if lighting should be activated or dimmed."}),"\n",(0,s.jsxs)(n.li,{children:["Forwards the decision to the ",(0,s.jsx)(n.strong,{children:"Dimmer"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"code-snippet",children:"Code Snippet:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"void DoorContact_Process(bool rightDoorStatus, bool leftDoorStatus) {\n    if (rightDoorStatus || leftDoorStatus) {\n        ActivateLighting();\n    } else {\n        DeactivateLighting();\n    }\n}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"13-switch",children:(0,s.jsx)(n.strong,{children:"1.3 Switch"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"Switch"})," component acts as a manual control interface."]}),"\n",(0,s.jsx)(n.li,{children:"It allows the user to override automatic operations and directly control the lighting system."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"use-case",children:"Use Case:"}),"\n",(0,s.jsx)(n.p,{children:"The driver can manually turn the lights on or off, regardless of door status."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"14-dimmer",children:(0,s.jsx)(n.strong,{children:"1.4 Dimmer"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"Dimmer"})," component controls the brightness of the lights."]}),"\n",(0,s.jsxs)(n.li,{children:["It receives input from the ",(0,s.jsx)(n.strong,{children:"Door Contact"})," and/or ",(0,s.jsx)(n.strong,{children:"Switch"})," components."]}),"\n",(0,s.jsx)(n.li,{children:"Based on these inputs, it adjusts the lighting intensity to match the desired behavior."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"key-functions",children:"Key Functions:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Gradually increase brightness when a door opens."}),"\n",(0,s.jsx)(n.li,{children:"Reduce brightness when transitioning to standby or off mode."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"code-snippet-1",children:"Code Snippet:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"void Dimmer_AdjustBrightness(int targetBrightness) {\n    int currentBrightness = GetCurrentBrightness();\n    while (currentBrightness != targetBrightness) {\n        UpdateBrightness(currentBrightness++);\n    }\n}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"15-light",children:(0,s.jsx)(n.strong,{children:"1.5 Light"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"Light"})," component is the endpoint that controls the actual lighting hardware (e.g., LEDs or bulbs)."]}),"\n",(0,s.jsxs)(n.li,{children:["It executes commands from the ",(0,s.jsx)(n.strong,{children:"Dimmer"})," or ",(0,s.jsx)(n.strong,{children:"Switch"})," components to modify the lighting state."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example",children:"Example:"}),"\n",(0,s.jsxs)(n.p,{children:["When the ",(0,s.jsx)(n.strong,{children:"Dimmer"})," sends a brightness value, the ",(0,s.jsx)(n.strong,{children:"Light"})," component applies the setting to the hardware."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"2-component-interactions",children:(0,s.jsx)(n.strong,{children:"2. Component Interactions"})}),"\n",(0,s.jsx)(n.h3,{id:"21-signal-flow",children:(0,s.jsx)(n.strong,{children:"2.1 Signal Flow"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Right Door/Left Door \u2192 Door Contact:"})," These components send their door status to the ",(0,s.jsx)(n.strong,{children:"Door Contact"})," module."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Door Contact \u2192 Dimmer:"})," The ",(0,s.jsx)(n.strong,{children:"Door Contact"})," determines whether the lighting system needs to activate or remain inactive."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Switch \u2192 Dimmer:"})," The ",(0,s.jsx)(n.strong,{children:"Switch"})," can override ",(0,s.jsx)(n.strong,{children:"Door Contact"})," decisions, providing manual control."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dimmer \u2192 Light:"})," The ",(0,s.jsx)(n.strong,{children:"Dimmer"})," sends brightness levels to the ",(0,s.jsx)(n.strong,{children:"Light"})," module for implementation."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"3-functional-overview",children:(0,s.jsx)(n.strong,{children:"3. Functional Overview"})}),"\n",(0,s.jsx)(n.h3,{id:"31-door-based-lighting",children:(0,s.jsx)(n.strong,{children:"3.1 Door-Based Lighting"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The system activates the lights when any door is open and dims or turns them off when all doors are closed."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"workflow",children:"Workflow:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Right Door/Left Door"})," sends door status to the ",(0,s.jsx)(n.strong,{children:"Door Contact"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"Door Contact"})," evaluates the status and forwards the information to the ",(0,s.jsx)(n.strong,{children:"Dimmer"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"Dimmer"})," adjusts the brightness, sending the target value to the ",(0,s.jsx)(n.strong,{children:"Light"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"32-manual-lighting-control",children:(0,s.jsx)(n.strong,{children:"3.2 Manual Lighting Control"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"Switch"})," allows users to manually turn lights on or off, regardless of door states."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"Dimmer"})," prioritizes manual commands from the ",(0,s.jsx)(n.strong,{children:"Switch"})," over automatic inputs from the ",(0,s.jsx)(n.strong,{children:"Door Contact"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"workflow-1",children:"Workflow:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["The user interacts with the ",(0,s.jsx)(n.strong,{children:"Switch"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"Switch"})," sends the command to the ",(0,s.jsx)(n.strong,{children:"Dimmer"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"Dimmer"})," updates the light state and brightness accordingly."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"4-advanced-considerations",children:(0,s.jsx)(n.strong,{children:"4. Advanced Considerations"})}),"\n",(0,s.jsx)(n.h3,{id:"41-fault-tolerance",children:(0,s.jsx)(n.strong,{children:"4.1 Fault Tolerance"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ensure the system can handle inconsistent door signals (e.g., faulty sensors)."}),"\n",(0,s.jsxs)(n.li,{children:["Add redundancy checks in the ",(0,s.jsx)(n.strong,{children:"Door Contact"})," component to verify input validity."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"code-snippet-2",children:"Code Snippet:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"bool ValidateDoorInput(bool doorStatus) {\n    // Logic to validate sensor input\n    return (doorStatus == true || doorStatus == false);\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"42-timing-and-delays",children:(0,s.jsx)(n.strong,{children:"4.2 Timing and Delays"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Implement delays in the ",(0,s.jsx)(n.strong,{children:"Dimmer"})," to provide smooth transitions between brightness levels."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-1",children:"Example:"}),"\n",(0,s.jsx)(n.p,{children:"Use a timer or PWM to gradually increase or decrease light intensity."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"5-benefits-of-the-component-design",children:(0,s.jsx)(n.strong,{children:"5. Benefits of the Component Design"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Scalability:"})," Modular components allow for easy integration of additional features, such as ambient lighting or advanced dimming controls."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Maintainability:"})," Independent modules simplify debugging and testing."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Reusability:"})," Standardized interfaces enable the reuse of components across different vehicle models."]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(96540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);