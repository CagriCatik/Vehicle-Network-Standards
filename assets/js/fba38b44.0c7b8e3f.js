"use strict";(self.webpackChunkvns=self.webpackChunkvns||[]).push([[53641],{12063:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>u,default:()=>l,frontMatter:()=>a,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"SOVA/core-concepts-soa/use_cases","title":"Anwendungsf\xe4lle f\xfcr die Service-orientierte Fahrzeugarchitektur","description":"Mit zunehmender Anzahl an ECUs, Sensoren, Aktoren und Softwarekomponenten in einem Fahrzeug steigt die","source":"@site/docs/SOVA/03_core-concepts-soa/03_use_cases.md","sourceDirName":"SOVA/03_core-concepts-soa","slug":"/SOVA/core-concepts-soa/use_cases","permalink":"/Vehicle-Network-Standards/docs/SOVA/core-concepts-soa/use_cases","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/SOVA/03_core-concepts-soa/03_use_cases.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"sovaSidebar","previous":{"title":"Service Provider","permalink":"/Vehicle-Network-Standards/docs/SOVA/core-concepts-soa/service_provider"},"next":{"title":"Zielbild einer serviceorientierten Fahrzeugarchitektur","permalink":"/Vehicle-Network-Standards/docs/SOVA/core-concepts-soa/zielbild"}}');var t=i(74848),s=i(28453);const a={},u="Anwendungsf\xe4lle f\xfcr die Service-orientierte Fahrzeugarchitektur",d={},o=[];function c(e){const n={h1:"h1",header:"header",li:"li",ol:"ol",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"anwendungsf\xe4lle-f\xfcr-die-service-orientierte-fahrzeugarchitektur",children:"Anwendungsf\xe4lle f\xfcr die Service-orientierte Fahrzeugarchitektur"})}),"\n",(0,t.jsx)(n.p,{children:"Mit zunehmender Anzahl an ECUs, Sensoren, Aktoren und Softwarekomponenten in einem Fahrzeug steigt die\nKomplexit\xe4t und Schwierigkeit, neue Funktionen zu implementieren, ohne Auswirkungen auf alle anderen\nKomponenten zu haben. Doch wir streben danach, neue Funktionen und Features ins Fahrzeug zu integrieren, um\nein optimales Kundenerlebnis zu bieten."}),"\n",(0,t.jsx)(n.p,{children:"Aus diesem Grund ist die Entwicklung einer flexiblen und anpassungsf\xe4higen Softwarearchitektur f\xfcr Fahrzeuge\nvon gro\xdfer Bedeutung. Diese Architektur soll im Fahrzeug Services bereitstellen, um Daten leicht abrufbar und\nverwendbar zu machen. Das bedeutet, dass ein Client nicht mehr mit der Interpretation von Daten belastet ist,\nsondern bereits aggregierte Daten einfach nutzen kann."}),"\n",(0,t.jsx)(n.p,{children:"Es gibt konkrete Use Cases, die verdeutlichen, warum die Etablierung einer service-orientierten\nFahrzeugarchitektur von entscheidender Bedeutung ist:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Flexibles Steuern von Fahrzeugfunktionen: Aktuell werden mechatronische Funktionen \xfcber spezifische\nRequest-Signale angesteuert, die von bekannten Clients kommen. Jeder Client hat sein eigenes spezifisches\nRequest-Signal, was bedeutet, dass f\xfcr jeden neuen Client eine neue Signaldefinition erstellt werden muss. Zudem\nm\xfcssen Sender und Empf\xe4nger angepasst werden, was insbesondere bei vielen Beteiligten sehr aufwendig ist.\nDurch SOA k\xf6nnen diese Client-spezifischen Signale durch generische Signale ersetzt werden, die von mehreren Clients genutzt werden k\xf6nnen. Dies erm\xf6glicht eine n:1 Kommunikation, was die Fahrzeugvernetzung deutlich\nflexibler macht."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Verteilung von (bereits verarbeiteten) Daten im Fahrzeugnetzwerk: Ein Fahrzeug generiert w\xe4hrend der\nFahrt eine Vielzahl von Daten, wie beispielsweise Geschwindigkeit und Au\xdfentemperatur. Diese Daten werden\naktuell oft als Rohsignale zwischen den Funktionen verschickt. Die Empf\xe4nger m\xfcssen die Daten selbstst\xe4ndig\neinsammeln und interpretieren. In einer Service-Orientierten Fahrzeugarchitektur \xfcbernimmt ein dedizierter Server\ndiese Aufgabe. Er interpretiert die Daten, generiert Mehrwert und stellt die aggregierten Daten bereit, was zu einem\ndeutlichen Mehrwert im Fahrzeugnetzwerk f\xfchrt."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Die Service-Orientierte Architektur (SOA) hat ihren Ursprung in der IT und ist dort seit vielen Jahren fest etabliert.\nSie hat sich aus der Client/Server-Kommunikation \xfcber mehrere Stufen hinweg entwickelt. Im Zentrum von SOA\nstehen Services, die prim\xe4r zur Realisierung von Funktionen verwendet werden. Die Kommunikation erfolgt\ngenerell nach dem Prinzip von Anfrage und Antwort (Request-Response)."}),"\n",(0,t.jsx)(n.p,{children:"Ein Service in der SOA ist eine klar definierte Funktion. Er ist eigenst\xe4ndig und geschlossen, das hei\xdft, er operiert\nunabh\xe4ngig von anderen Services oder dem Kontext, in dem er aufgerufen wird. Anders gesagt, ein Service h\xe4ngt\nnicht vom Zustand anderer Services ab."}),"\n",(0,t.jsx)(n.p,{children:"In der IT-Industrie wird SOA als evolution\xe4rer Schritt in der Softwarearchitektur angesehen. Sie erm\xf6glicht es IT\nOrganisationen, mit den zunehmend komplexen Herausforderungen umzugehen, denen sie gegen\xfcberstehen.\nDiese Entwicklung f\xfchrt sogar zu noch feiner granularen Microservices-Architekturen, die die Flexibilit\xe4t und\nSkalierbarkeit von Anwendungen weiter verbessern."}),"\n",(0,t.jsx)(n.p,{children:"Kernprinzipien der Service-Orientierten Architektur (SOA):"}),"\n",(0,t.jsx)(n.p,{children:"Client/Server Kommunikation: SOA basiert auf dem Prinzip der Kommunikation zwischen einem Server\nund einem oder mehreren Clients. Hierbei findet ein Datenaustausch statt, bei dem der Server Services\nbereitstellt und die Clients diese Services nutzen.\nNutzung bew\xe4hrter Kommunikationsprinzipien: SOA nutzt etablierte Kommunikationsprinzipien, um die\nArchitektur eines Software-Systems zu gestalten. Dabei werden bew\xe4hrte Methoden und Technologien aus\nder IT-Branche angewendet.\nBereitstellung von Services: SOA stellt Services bereit, die entweder direkt an Endnutzer, Anwendungen\noder Applikationen zur Verf\xfcgung gestellt werden k\xf6nnen. Alternativ k\xf6nnen Services auch von anderen\nServices in einem Netzwerk genutzt werden.\nVerwendung von Schnittstellen: In einem verteilten System, wie es bei SOA typisch ist, erfolgt die\nBereitstellung und Nutzung von Services \xfcber definierte Schnittstellen. Diese Schnittstellen m\xfcssen\nzug\xe4nglich, gut beschrieben und daher leicht nutzbar sein. Dadurch wird eine reibungslose Interaktion\nzwischen den beteiligten Komponenten erm\xf6glicht.\nDiese Kernprinzipien bilden die Grundlage f\xfcr die Implementierung und Nutzung der Service-Orientierten\nArchitektur. Sie erm\xf6glichen eine flexible, skalierbare und effiziente Gestaltung von Software-Systemen in\nverschiedenen Anwendungsbereichen"})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>u});var r=i(96540);const t={},s=r.createContext(t);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function u(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);